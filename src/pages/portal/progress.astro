---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';

// Mock data for skills breakdown
const skills = [
  {
    name: 'Speaking',
    level: 78,
    color: '#ff9ec7',
    trend: '+5%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
      <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
      <line x1="12" y1="19" x2="12" y2="23"></line>
      <line x1="8" y1="23" x2="16" y2="23"></line>
    </svg>`
  },
  {
    name: 'Listening',
    level: 85,
    color: '#b794d4',
    trend: '+8%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M3 18v-6a9 9 0 0 1 18 0v6"></path>
      <path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>
    </svg>`
  },
  {
    name: 'Reading',
    level: 72,
    color: '#ff9ec7',
    trend: '+3%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
      <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
    </svg>`
  },
  {
    name: 'Writing',
    level: 68,
    color: '#dcc6f0',
    trend: '+4%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 19l7-7 3 3-7 7-3-3z"></path>
      <path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path>
      <path d="M2 2l7.586 7.586"></path>
      <circle cx="11" cy="11" r="2"></circle>
    </svg>`
  },
  {
    name: 'Grammar',
    level: 82,
    color: '#b794d4',
    trend: '+6%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polyline points="4 17 10 11 4 5"></polyline>
      <line x1="12" y1="19" x2="20" y2="19"></line>
    </svg>`
  },
  {
    name: 'Vocabulary',
    level: 75,
    color: '#ffcce0',
    trend: '+7%',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
      <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
    </svg>`
  }
];

// Mock data for learning timeline (last 6 months)
const timeline = [
  { month: 'Apr', score: 65 },
  { month: 'May', score: 68 },
  { month: 'Jun', score: 72 },
  { month: 'Jul', score: 75 },
  { month: 'Aug', score: 78 },
  { month: 'Sep', score: 82 }
];

// Mock data for attendance
const attendance = {
  total: 48,
  attended: 44,
  missed: 2,
  excused: 2,
  percentage: 92
};

// Mock data for test scores
const testScores = [
  { name: 'Grammar Test', score: 88, date: 'Sep 15', maxScore: 100 },
  { name: 'Vocabulary Quiz', score: 92, date: 'Sep 10', maxScore: 100 },
  { name: 'Speaking Assessment', score: 85, date: 'Sep 5', maxScore: 100 },
  { name: 'Writing Task', score: 78, date: 'Aug 30', maxScore: 100 }
];

// Mock data for assignments
const assignments = {
  submitted: 18,
  onTime: 16,
  late: 2,
  averageGrade: 86
};

// Mock data for improvement areas (AI-suggested)
const improvementAreas = [
  {
    area: 'Writing Structure',
    priority: 'High',
    description: 'Focus on paragraph organization and coherence',
    resources: 3
  },
  {
    area: 'Advanced Vocabulary',
    priority: 'Medium',
    description: 'Expand business and academic word knowledge',
    resources: 5
  },
  {
    area: 'Pronunciation',
    priority: 'Medium',
    description: 'Work on word stress and intonation patterns',
    resources: 4
  }
];
---

<DashboardLayout title="Progress Analytics" currentPage="progress">
  <SidebarNav slot="sidebar" currentPage="progress" />

  <div slot="header">
    <div>
      <h1 class="header-title">Progress Analytics</h1>
      <p class="header-subtitle">Track your learning journey and achievements</p>
    </div>
    <div class="header-actions">
      <button class="export-btn">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
          <polyline points="7 10 12 15 17 10"></polyline>
          <line x1="12" y1="15" x2="12" y2="3"></line>
        </svg>
        Export Report
      </button>
      <select class="period-select">
        <option>Last 6 Months</option>
        <option>Last 3 Months</option>
        <option>Last Year</option>
        <option>All Time</option>
      </select>
    </div>
  </div>

  <!-- Overall Progress Summary -->
  <section class="stats-grid">
    <div class="stat-card">
      <div class="stat-icon" style="background: #ffd4e8; border: 1px solid #ffcce0;">
        <span style="color: #ff9ec7;" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 20V10"></path>
          <path d="M12 20V4"></path>
          <path d="M6 20v-6"></path>
        </svg>`} />
      </div>
      <div class="stat-content">
        <p class="stat-label">Overall Progress</p>
        <h3 class="stat-value">78%</h3>
        <p class="stat-change positive">+12% from last month</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon" style="background: #e8d9f5; border: 1px solid #dcc6f0;">
        <span style="color: #b794d4;" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="10"></circle>
          <polyline points="12 6 12 12 16 14"></polyline>
        </svg>`} />
      </div>
      <div class="stat-content">
        <p class="stat-label">Study Hours</p>
        <h3 class="stat-value">142h</h3>
        <p class="stat-change positive">+8h this week</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon" style="background: #ffcce0; border: 1px solid #ffd4e8;">
        <span style="color: #ff9ec7;" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
        </svg>`} />
      </div>
      <div class="stat-content">
        <p class="stat-label">Achievements</p>
        <h3 class="stat-value">24</h3>
        <p class="stat-change positive">3 new this month</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon" style="background: #dcc6f0; border: 1px solid #c4a7de;">
        <span style="color: #b794d4;" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
        </svg>`} />
      </div>
      <div class="stat-content">
        <p class="stat-label">Current Level</p>
        <h3 class="stat-value">B2</h3>
        <p class="stat-change">Intermediate</p>
      </div>
    </div>
  </section>

  <!-- Skills Breakdown -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <span class="section-title-icon" style="background: #e8d9f5; border: 1px solid #dcc6f0;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#b794d4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
          </svg>
        </span>
        Skills Breakdown
      </h2>
      <span class="info-text">Track your progress across key language skills</span>
    </div>
    <div class="skills-grid">
      {skills.map((skill) => (
        <div class="skill-card">
          <div class="skill-header">
            <div class="skill-name-wrapper">
              <div class="skill-icon" style={`background: ${skill.color}15; border: 1px solid ${skill.color}30;`}>
                <span style={`color: ${skill.color};`} set:html={skill.icon} />
              </div>
              <h4 class="skill-name">{skill.name}</h4>
            </div>
            <span class="skill-trend">{skill.trend}</span>
          </div>
          <div class="skill-progress">
            <div class="progress-bar">
              <div class="progress-fill" style={`width: ${skill.level}%; background: ${skill.color};`}>
                <span class="progress-label">{skill.level}%</span>
              </div>
            </div>
          </div>
          <div class="skill-level">
            <span class="level-text">
              {skill.level >= 80 ? 'Advanced' : skill.level >= 60 ? 'Intermediate' : 'Elementary'}
            </span>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Learning Timeline -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <span class="section-title-icon" style="background: #ffd4e8; border: 1px solid #ffcce0;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ff9ec7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="12" y1="20" x2="12" y2="10"></line>
            <line x1="18" y1="20" x2="18" y2="4"></line>
            <line x1="6" y1="20" x2="6" y2="16"></line>
          </svg>
        </span>
        Learning Timeline
      </h2>
      <span class="info-text">Your progress over the last 6 months</span>
    </div>
    <div class="timeline-card">
      <div class="timeline-chart">
        {timeline.map((month, index) => (
          <div class="timeline-bar-wrapper">
            <div class="timeline-bar">
              <div class="timeline-fill" style={`height: ${month.score}%;`}>
                <span class="timeline-value">{month.score}</span>
              </div>
            </div>
            <span class="timeline-label">{month.month}</span>
          </div>
        ))}
      </div>
      <div class="timeline-legend">
        <div class="legend-item">
          <div class="legend-dot" style="background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));"></div>
          <span>Overall Score</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Attendance & Performance Grid -->
  <div class="two-column-grid">
    <!-- Attendance Record -->
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">
          <span class="section-title-icon" style="background: #e8d9f5; border: 1px solid #dcc6f0;">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#b794d4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
              <polyline points="22 4 12 14.01 9 11.01"></polyline>
            </svg>
          </span>
          Attendance Record
        </h2>
      </div>
      <div class="attendance-card">
        <div class="attendance-circle">
          <svg class="circle-chart" viewBox="0 0 100 100">
            <circle class="circle-bg" cx="50" cy="50" r="45"></circle>
            <circle class="circle-progress" cx="50" cy="50" r="45"
              style={`stroke-dasharray: ${attendance.percentage * 2.827}, 282.7;`}>
            </circle>
          </svg>
          <div class="circle-text">
            <span class="circle-percentage">{attendance.percentage}%</span>
            <span class="circle-label">Attendance</span>
          </div>
        </div>
        <div class="attendance-stats">
          <div class="attendance-stat">
            <span class="stat-number">{attendance.attended}</span>
            <span class="stat-text">Attended</span>
          </div>
          <div class="attendance-stat">
            <span class="stat-number">{attendance.missed}</span>
            <span class="stat-text">Missed</span>
          </div>
          <div class="attendance-stat">
            <span class="stat-number">{attendance.excused}</span>
            <span class="stat-text">Excused</span>
          </div>
          <div class="attendance-stat">
            <span class="stat-number">{attendance.total}</span>
            <span class="stat-text">Total Classes</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Assignments Overview -->
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">
          <span class="section-title-icon" style="background: #ffcce0; border: 1px solid #ffd4e8;">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ff9ec7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14 2 14 8 20 8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
            </svg>
          </span>
          Assignments
        </h2>
      </div>
      <div class="assignments-card">
        <div class="assignments-grid">
          <div class="assignment-stat-item">
            <div class="assignment-icon" style="background: #ffd4e8; border: 1px solid #ffcce0;">
              <span style="color: #ff9ec7;" set:html={`<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="20 6 9 17 4 12"></polyline>
              </svg>`} />
            </div>
            <div class="assignment-info">
              <span class="assignment-number">{assignments.submitted}</span>
              <span class="assignment-label">Submitted</span>
            </div>
          </div>
          <div class="assignment-stat-item">
            <div class="assignment-icon" style="background: #e8d9f5; border: 1px solid #dcc6f0;">
              <span style="color: #b794d4;" set:html={`<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12 6 12 12 16 14"></polyline>
              </svg>`} />
            </div>
            <div class="assignment-info">
              <span class="assignment-number">{assignments.onTime}</span>
              <span class="assignment-label">On Time</span>
            </div>
          </div>
          <div class="assignment-stat-item">
            <div class="assignment-icon" style="background: #ffcce0; border: 1px solid #ffd4e8;">
              <span style="color: #ff9ec7;" set:html={`<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="8" x2="12" y2="12"></line>
                <line x1="12" y1="16" x2="12.01" y2="16"></line>
              </svg>`} />
            </div>
            <div class="assignment-info">
              <span class="assignment-number">{assignments.late}</span>
              <span class="assignment-label">Late</span>
            </div>
          </div>
          <div class="assignment-stat-item">
            <div class="assignment-icon" style="background: #dcc6f0; border: 1px solid #c4a7de;">
              <span style="color: #b794d4;" set:html={`<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
              </svg>`} />
            </div>
            <div class="assignment-info">
              <span class="assignment-number">{assignments.averageGrade}%</span>
              <span class="assignment-label">Avg Grade</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- Test Scores -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <span class="section-title-icon" style="background: #dcc6f0; border: 1px solid #c4a7de;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#b794d4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
            <polyline points="14 2 14 8 20 8"></polyline>
            <line x1="16" y1="13" x2="8" y2="13"></line>
            <line x1="16" y1="17" x2="8" y2="17"></line>
          </svg>
        </span>
        Recent Test Scores
      </h2>
      <a href="/portal/assignments" class="section-link">View All Tests →</a>
    </div>
    <div class="test-scores-list">
      {testScores.map((test) => (
        <div class="test-score-item">
          <div class="test-info">
            <h4 class="test-name">{test.name}</h4>
            <p class="test-date">{test.date}</p>
          </div>
          <div class="test-progress">
            <div class="test-bar">
              <div class="test-fill" style={`width: ${test.score}%; background: ${test.score >= 80 ? '#22c55e' : test.score >= 60 ? '#f59e0b' : '#ef4444'};`}></div>
            </div>
            <span class="test-score">{test.score}/{test.maxScore}</span>
          </div>
          <div class={`test-grade ${test.score >= 80 ? 'excellent' : test.score >= 60 ? 'good' : 'needs-improvement'}`}>
            {test.score >= 90 ? 'Excellent' : test.score >= 80 ? 'Very Good' : test.score >= 70 ? 'Good' : 'Fair'}
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- AI-Suggested Improvement Areas -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <span class="section-title-icon" style="background: #ffd4e8; border: 1px solid #ffcce0;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ff9ec7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2a10 10 0 1 0 10 10H12V2Z"></path>
            <path d="M12 12h10a10 10 0 0 1-10 10V12Z"></path>
          </svg>
        </span>
        AI-Suggested Focus Areas
      </h2>
      <span class="ai-badge">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
        </svg>
        AI Powered
      </span>
    </div>
    <div class="improvement-grid">
      {improvementAreas.map((area) => (
        <div class="improvement-card">
          <div class="improvement-header">
            <h4 class="improvement-name">{area.area}</h4>
            <span class={`priority-badge ${area.priority.toLowerCase()}`}>
              {area.priority} Priority
            </span>
          </div>
          <p class="improvement-description">{area.description}</p>
          <div class="improvement-footer">
            <button class="resources-btn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
                <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
              </svg>
              {area.resources} Resources Available
            </button>
            <button class="start-btn">Start Learning</button>
          </div>
        </div>
      ))}
    </div>
  </section>
</DashboardLayout>

<style>
  /* Header Styles */
  .header-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 1rem;
    color: var(--bc-dark-gray);
  }

  .header-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .export-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.625rem 1.25rem;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
    border-radius: 10px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .export-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  .period-select {
    padding: 0.625rem 1rem;
    border: 1px solid var(--bc-light-gray);
    border-radius: 10px;
    background: white;
    color: var(--bc-primary-blue);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .period-select:hover {
    border-color: var(--bc-primary-blue);
  }

  /* Stats Grid */
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2.5rem;
  }

  .stat-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    display: flex;
    gap: 1.25rem;
    align-items: center;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .stat-icon {
    width: 56px;
    height: 56px;
    border-radius: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .stat-content {
    flex: 1;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    margin-bottom: 0.25rem;
  }

  .stat-value {
    font-size: 1.875rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .stat-change {
    font-size: 0.8125rem;
    color: var(--bc-dark-gray);
  }

  .stat-change.positive {
    color: #22c55e;
  }

  /* Section Styles */
  .section {
    margin-bottom: 2.5rem;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.375rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .section-title-icon {
    width: 36px;
    height: 36px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .section-link {
    font-size: 0.875rem;
    color: var(--bc-light-blue);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .section-link:hover {
    color: var(--bc-primary-blue);
    transform: translateX(2px);
  }

  .info-text {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .ai-badge {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.375rem 0.875rem;
    background: #e8d9f5;
    color: #b794d4;
    border: 1px solid #dcc6f0;
    border-radius: 8px;
    font-size: 0.8125rem;
    font-weight: 600;
  }

  .ai-badge svg {
    stroke: #b794d4;
  }

  /* Skills Grid */
  .skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  .skill-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .skill-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .skill-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .skill-name-wrapper {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .skill-icon {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .skill-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .skill-trend {
    font-size: 0.875rem;
    font-weight: 600;
    color: #22c55e;
    padding: 0.25rem 0.625rem;
    background: rgba(34, 197, 94, 0.1);
    border-radius: 6px;
  }

  .skill-progress {
    margin-bottom: 0.75rem;
  }

  .progress-bar {
    height: 12px;
    background: rgba(35, 7, 90, 0.1);
    border-radius: 10px;
    overflow: hidden;
  }

  .progress-fill {
    height: 100%;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding-right: 0.5rem;
    transition: width 0.5s ease;
    position: relative;
  }

  .progress-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: white;
  }

  .skill-level {
    display: flex;
    justify-content: flex-end;
  }

  .level-text {
    font-size: 0.8125rem;
    color: var(--bc-dark-gray);
    font-weight: 500;
  }

  /* Timeline */
  .timeline-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .timeline-chart {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    height: 240px;
    padding: 1rem 0;
    gap: 1.5rem;
  }

  .timeline-bar-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
    gap: 0.75rem;
  }

  .timeline-bar {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: flex-end;
    justify-content: center;
  }

  .timeline-fill {
    width: 100%;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    border-radius: 8px 8px 0 0;
    min-height: 20px;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding-top: 0.5rem;
    transition: height 0.5s ease;
  }

  .timeline-value {
    font-size: 0.875rem;
    font-weight: 600;
    color: white;
  }

  .timeline-label {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    font-weight: 500;
  }

  .timeline-legend {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--bc-light-gray);
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .legend-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  /* Two Column Grid */
  .two-column-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
    gap: 2rem;
    margin-bottom: 2.5rem;
  }

  /* Attendance Card */
  .attendance-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .attendance-circle {
    position: relative;
    width: 200px;
    height: 200px;
    margin: 0 auto 2rem;
  }

  .circle-chart {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
  }

  .circle-bg {
    fill: none;
    stroke: rgba(35, 7, 90, 0.1);
    stroke-width: 8;
  }

  .circle-progress {
    fill: none;
    stroke: url(#gradient);
    stroke-width: 8;
    stroke-linecap: round;
    transition: stroke-dasharray 0.5s ease;
  }

  .circle-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }

  .circle-percentage {
    display: block;
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    line-height: 1;
    margin-bottom: 0.25rem;
  }

  .circle-label {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .attendance-stats {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .attendance-stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
    background: rgba(35, 7, 90, 0.02);
    border-radius: 12px;
  }

  .stat-number {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    line-height: 1;
    margin-bottom: 0.375rem;
  }

  .stat-text {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  /* Assignments Card */
  .assignments-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .assignments-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .assignment-stat-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem;
    background: rgba(35, 7, 90, 0.02);
    border-radius: 12px;
  }

  .assignment-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .assignment-info {
    display: flex;
    flex-direction: column;
  }

  .assignment-number {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    line-height: 1;
    margin-bottom: 0.25rem;
  }

  .assignment-label {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  /* Test Scores */
  .test-scores-list {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .test-score-item {
    display: flex;
    align-items: center;
    gap: 2rem;
    padding: 1.5rem;
    border-bottom: 1px solid var(--bc-light-gray);
    transition: all 0.2s ease;
  }

  .test-score-item:last-child {
    border-bottom: none;
  }

  .test-score-item:hover {
    background: rgba(35, 7, 90, 0.02);
  }

  .test-info {
    width: 200px;
    flex-shrink: 0;
  }

  .test-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .test-date {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .test-progress {
    flex: 1;
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .test-bar {
    flex: 1;
    height: 8px;
    background: rgba(35, 7, 90, 0.1);
    border-radius: 10px;
    overflow: hidden;
  }

  .test-fill {
    height: 100%;
    border-radius: 10px;
    transition: width 0.5s ease;
  }

  .test-score {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    min-width: 60px;
  }

  .test-grade {
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 600;
    min-width: 100px;
    text-align: center;
  }

  .test-grade.excellent {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
  }

  .test-grade.good {
    background: rgba(245, 158, 11, 0.1);
    color: #f59e0b;
  }

  .test-grade.needs-improvement {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
  }

  /* Improvement Areas */
  .improvement-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));
    gap: 1.5rem;
  }

  .improvement-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .improvement-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .improvement-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 1rem;
  }

  .improvement-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .priority-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .priority-badge.high {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
  }

  .priority-badge.medium {
    background: rgba(245, 158, 11, 0.1);
    color: #f59e0b;
  }

  .priority-badge.low {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
  }

  .improvement-description {
    font-size: 0.9375rem;
    color: var(--bc-dark-gray);
    line-height: 1.6;
    margin-bottom: 1.25rem;
  }

  .improvement-footer {
    display: flex;
    gap: 0.75rem;
  }

  .resources-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    background: rgba(35, 7, 90, 0.05);
    border: 1px solid var(--bc-light-gray);
    border-radius: 8px;
    color: var(--bc-primary-blue);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .resources-btn:hover {
    background: rgba(35, 7, 90, 0.1);
    border-color: var(--bc-primary-blue);
  }

  .start-btn {
    padding: 0.625rem 1.25rem;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .start-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .header-actions {
      flex-direction: column;
      align-items: stretch;
      gap: 0.75rem;
    }

    .stats-grid {
      grid-template-columns: 1fr;
    }

    .skills-grid {
      grid-template-columns: 1fr;
    }

    .timeline-chart {
      height: 200px;
      gap: 0.75rem;
    }

    .timeline-value {
      font-size: 0.75rem;
    }

    .two-column-grid {
      grid-template-columns: 1fr;
    }

    .assignments-grid {
      grid-template-columns: 1fr;
    }

    .test-score-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .test-info {
      width: 100%;
    }

    .test-progress {
      width: 100%;
    }

    .improvement-grid {
      grid-template-columns: 1fr;
    }

    .improvement-footer {
      flex-direction: column;
    }
  }

  /* Add gradient definition for circle progress */
  @supports (background: conic-gradient(#000, #fff)) {
    .circle-progress {
      stroke: var(--bc-primary-blue);
    }
  }
</style>
