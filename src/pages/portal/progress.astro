---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';

// Mock data for skills
const skills = [
  { name: 'Speaking', level: 78, color: '#667eea', trend: '+5%', grade: 'Intermediate' },
  { name: 'Listening', level: 85, color: '#a855f7', trend: '+8%', grade: 'Advanced' },
  { name: 'Reading', level: 72, color: '#ec4899', trend: '+3%', grade: 'Intermediate' },
  { name: 'Writing', level: 68, color: '#f97316', trend: '+4%', grade: 'Intermediate' },
  { name: 'Grammar', level: 82, color: '#10b981', trend: '+6%', grade: 'Advanced' },
  { name: 'Vocabulary', level: 75, color: '#06b6d4', trend: '+7%', grade: 'Intermediate' }
];

// Overall stats
const overallStats = {
  totalProgress: 78,
  studyHours: 142,
  achievements: 24,
  currentLevel: 'B2',
  hoursThisWeek: 8,
  newAchievements: 3
};

// Time filter options
const timeFilters = ['Last Week', 'Last Month', 'Last 6 Months', 'All Time'];
---

<DashboardLayout title="Progress Analytics" currentPage="progress">
  <SidebarNav slot="sidebar" currentPage="progress" />

  <div slot="header" class="header-content">
    <div>
      <h1 class="header-title">Progress Analytics</h1>
      <p class="header-subtitle">Track your learning journey and achievements</p>
    </div>
    <div class="time-filter">
      <select class="filter-select glass-select">
        {timeFilters.map((filter) => (
          <option value={filter}>{filter}</option>
        ))}
      </select>
    </div>
  </div>

  <div class="progress-container">
    <!-- Top Stats Cards -->
    <div class="stats-grid">
      <div class="stat-card glass gradient-border">
        <div class="stat-content">
          <div class="stat-header">
            <span class="stat-label">Overall Progress</span>
            <span class="stat-trend positive">+12% from last month</span>
          </div>
          <div class="stat-value-wrapper">
            <h2 class="stat-value">{overallStats.totalProgress}%</h2>
            <div class="mini-chart">
              <svg width="60" height="30" viewBox="0 0 60 30" fill="none">
                <path d="M0 20 L10 15 L20 18 L30 10 L40 12 L50 5 L60 8" stroke="url(#progress-gradient)" stroke-width="2" fill="none"/>
                <defs>
                  <linearGradient id="progress-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                    <stop offset="0%" style="stop-color:#10b981;stop-opacity:1" />
                    <stop offset="100%" style="stop-color:#06b6d4;stop-opacity:1" />
                  </linearGradient>
                </defs>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <div class="stat-card glass gradient-border">
        <div class="stat-content">
          <div class="stat-header">
            <span class="stat-label">Study Hours</span>
            <span class="stat-trend positive">+{overallStats.hoursThisWeek}h this week</span>
          </div>
          <div class="stat-value-wrapper">
            <h2 class="stat-value">{overallStats.studyHours}h</h2>
            <div class="hour-indicator">
              <div class="hour-bar" style="width: 75%"></div>
            </div>
          </div>
        </div>
      </div>

      <div class="stat-card glass gradient-border">
        <div class="stat-content">
          <div class="stat-header">
            <span class="stat-label">Achievements</span>
            <span class="stat-trend">{overallStats.newAchievements} new this month</span>
          </div>
          <div class="stat-value-wrapper">
            <h2 class="stat-value">{overallStats.achievements}</h2>
            <div class="achievement-icons">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <circle cx="12" cy="8" r="6" fill="#ffd4e8" opacity="0.5"/>
                <circle cx="12" cy="8" r="7" stroke="#ff9ec7" stroke-width="1.5"/>
                <polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88" stroke="#b794d4" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <circle cx="12" cy="12" r="10" stroke="#b794d4" stroke-width="1.5"/>
                <circle cx="12" cy="12" r="6" stroke="#ff9ec7" stroke-width="1.5"/>
                <circle cx="12" cy="12" r="2" fill="#ff9ec7"/>
              </svg>
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" fill="#ffd4e8" opacity="0.5"/>
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" stroke="#ff9ec7" stroke-width="1.5"/>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <div class="stat-card glass gradient-border">
        <div class="stat-content">
          <div class="stat-header">
            <span class="stat-label">Current Level</span>
            <span class="stat-trend">Intermediate</span>
          </div>
          <div class="stat-value-wrapper">
            <h2 class="stat-value">{overallStats.currentLevel}</h2>
            <div class="level-progress">
              <div class="level-dot active"></div>
              <div class="level-dot active"></div>
              <div class="level-dot active"></div>
              <div class="level-dot"></div>
              <div class="level-dot"></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Skills Breakdown Section -->
    <div class="skills-section glass">
      <div class="section-header">
        <h2 class="section-title">
          <span class="title-icon" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <circle cx="12" cy="12" r="9" fill="#ffd4e8" opacity="0.4"/>
            <path d="M12 2C12 2 8 6 8 12C8 14 10 16 12 16C14 16 16 14 16 12C16 6 12 2 12 2Z" fill="#ff9ec7" opacity="0.6"/>
            <circle cx="12" cy="12" r="9" stroke="#b794d4" stroke-width="1.5"/>
            <path d="M12 2C12 2 8 6 8 12C8 14 10 16 12 16C14 16 16 14 16 12C16 6 12 2 12 2Z" stroke="#ff9ec7" stroke-width="1.5"/>
          </svg>`} />
          Skills Breakdown
        </h2>
        <p class="section-subtitle">Track your progress across key language skills</p>
      </div>

      <div class="skills-grid">
        {skills.map((skill) => (
          <div class="skill-card">
            <div class="skill-header">
              <h3 class="skill-name">{skill.name}</h3>
              <span class="skill-trend">{skill.trend}</span>
            </div>

            <div class="circular-progress">
              <svg class="progress-ring" width="140" height="140">
                <circle
                  class="progress-ring-bg"
                  stroke="rgba(255, 255, 255, 0.2)"
                  stroke-width="8"
                  fill="none"
                  r="60"
                  cx="70"
                  cy="70"
                />
                <circle
                  class="progress-ring-fill"
                  stroke={skill.color}
                  stroke-width="8"
                  fill="none"
                  r="60"
                  cx="70"
                  cy="70"
                  style={`stroke-dasharray: ${377 * skill.level / 100} 377; stroke-dashoffset: 94.25;`}
                />
              </svg>
              <div class="progress-text">
                <span class="progress-value">{skill.level}%</span>
                <span class="progress-label">{skill.grade}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Activity Timeline -->
    <div class="timeline-section glass">
      <h2 class="section-title">
        <span class="title-icon" set:html={`<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <rect x="3" y="17" width="4" height="4" fill="#ffcce0" opacity="0.6" rx="1"/>
          <rect x="10" y="12" width="4" height="9" fill="#ffd4e8" opacity="0.6" rx="1"/>
          <rect x="17" y="7" width="4" height="14" fill="#ff9ec7" opacity="0.6" rx="1"/>
          <polyline points="2 14 7 9 13 13 22 4" stroke="#b794d4" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" fill="none"/>
          <polyline points="18 4 22 4 22 8" stroke="#b794d4" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" fill="none"/>
        </svg>`} />
        Learning Activity
      </h2>

      <div class="activity-chart">
        <div class="chart-months">
          {['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'].map((month) => (
            <div class="month-column">
              <div class="month-bars">
                <div class="activity-bar" style={`height: ${Math.random() * 100}%`}></div>
              </div>
              <span class="month-label">{month}</span>
            </div>
          ))}
        </div>
      </div>

      <div class="activity-legend">
        <div class="legend-item">
          <span class="legend-dot" style="background: linear-gradient(135deg, #667eea, #a855f7)"></span>
          <span>Study Sessions</span>
        </div>
        <div class="legend-item">
          <span class="legend-dot" style="background: linear-gradient(135deg, #ec4899, #f97316)"></span>
          <span>Achievements</span>
        </div>
        <div class="legend-item">
          <span class="legend-dot" style="background: linear-gradient(135deg, #10b981, #06b6d4)"></span>
          <span>Quiz Scores</span>
        </div>
      </div>
    </div>
  </div>
</DashboardLayout>

<style>
  .progress-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  /* Glass Effect */
  .glass {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    box-shadow:
      0 8px 32px rgba(31, 38, 135, 0.15),
      0 4px 12px rgba(0, 0, 0, 0.08);
    border-radius: 24px;
  }

  .gradient-border {
    position: relative;
  }

  .gradient-border::before {
    content: '';
    position: absolute;
    inset: -1px;
    border-radius: 24px;
    padding: 1px;
    background: linear-gradient(135deg, #667eea, #ec4899, #f97316);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .gradient-border:hover::before {
    opacity: 0.5;
  }

  /* Header */
  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  .header-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 1rem;
    color: var(--bc-dark-gray);
  }

  .time-filter {
    display: flex;
    align-items: center;
  }

  .filter-select {
    padding: 0.75rem 1.25rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.5);
    color: var(--bc-primary-blue);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;
  }

  .filter-select:hover {
    background: rgba(255, 255, 255, 0.7);
    transform: translateY(-2px);
  }

  /* Stats Grid */
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
  }

  .stat-card {
    padding: 1.75rem;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-4px);
    box-shadow:
      0 12px 40px rgba(31, 38, 135, 0.2),
      0 6px 16px rgba(0, 0, 0, 0.1);
  }

  .stat-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .stat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
    font-weight: 500;
  }

  .stat-trend {
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
  }

  .stat-trend.positive {
    color: #10b981;
  }

  .stat-value-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .stat-value {
    font-size: 2rem;
    font-weight: 700;
    background: linear-gradient(135deg, #667eea, #ec4899);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .mini-chart {
    opacity: 0.8;
  }

  .hour-indicator {
    width: 60px;
    height: 4px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2px;
    overflow: hidden;
  }

  .hour-bar {
    height: 100%;
    background: linear-gradient(90deg, #667eea, #a855f7);
    border-radius: 2px;
  }

  .achievement-icons {
    display: flex;
    gap: 0.25rem;
  }

  .achievement-icon {
    font-size: 1.25rem;
    opacity: 0.8;
  }

  .level-progress {
    display: flex;
    gap: 0.5rem;
  }

  .level-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
  }

  .level-dot.active {
    background: linear-gradient(135deg, #10b981, #06b6d4);
  }

  /* Skills Section */
  .skills-section {
    padding: 2rem;
  }

  .section-header {
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .title-icon {
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .title-icon svg {
    width: 100%;
    height: 100%;
  }

  .section-subtitle {
    color: var(--bc-medium-gray);
    font-size: 0.875rem;
  }

  .skills-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }

  .skill-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    transition: all 0.3s ease;
  }

  .skill-card:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-4px);
  }

  .skill-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-bottom: 1.5rem;
  }

  .skill-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .skill-trend {
    font-size: 0.875rem;
    color: #10b981;
    font-weight: 500;
  }

  /* Circular Progress */
  .circular-progress {
    position: relative;
    width: 140px;
    height: 140px;
  }

  .progress-ring {
    transform: rotate(-90deg);
  }

  .progress-ring-fill {
    transition: stroke-dasharray 0.5s ease;
    stroke-linecap: round;
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }

  .progress-value {
    display: block;
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
  }

  .progress-label {
    display: block;
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
    margin-top: 0.25rem;
  }

  /* Timeline Section */
  .timeline-section {
    padding: 2rem;
  }

  .activity-chart {
    margin: 2rem 0;
  }

  .chart-months {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    height: 200px;
    gap: 1rem;
  }

  .month-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
  }

  .month-bars {
    flex: 1;
    width: 100%;
    display: flex;
    align-items: flex-end;
    justify-content: center;
  }

  .activity-bar {
    width: 60%;
    background: linear-gradient(180deg, #667eea, #ec4899);
    border-radius: 8px 8px 0 0;
    transition: all 0.3s ease;
  }

  .activity-bar:hover {
    opacity: 0.8;
    transform: scaleY(1.05);
  }

  .month-label {
    margin-top: 0.75rem;
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
  }

  .activity-legend {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 2rem;
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .legend-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  /* Responsive */
  @media (max-width: 1200px) {
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .skills-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }

    .skills-grid {
      grid-template-columns: 1fr;
    }

    .header-content {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
  }
</style>