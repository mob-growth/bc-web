---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';

// Mock data for course materials
const courseMaterials = [
  {
    courseId: 1,
    courseName: 'Business English B2',
    materials: [
      {
        id: 1,
        title: 'Unit 5: Business Negotiations',
        type: 'PDF',
        size: '2.4 MB',
        uploadDate: 'Oct 15, 2024',
        description: 'Complete guide to negotiation strategies and vocabulary'
      },
      {
        id: 2,
        title: 'Email Writing Templates',
        type: 'PDF',
        size: '1.8 MB',
        uploadDate: 'Oct 12, 2024',
        description: 'Professional email templates for various situations'
      },
      {
        id: 3,
        title: 'Business Presentations Masterclass',
        type: 'Video',
        duration: '45 min',
        uploadDate: 'Oct 10, 2024',
        description: 'Learn how to deliver impactful business presentations'
      },
    ]
  },
  {
    courseId: 2,
    courseName: 'IELTS Preparation',
    materials: [
      {
        id: 4,
        title: 'IELTS Writing Task 2 Guide',
        type: 'PDF',
        size: '3.2 MB',
        uploadDate: 'Oct 18, 2024',
        description: 'Comprehensive strategies for Task 2 essay writing'
      },
      {
        id: 5,
        title: 'Speaking Test Practice Questions',
        type: 'Audio',
        duration: '30 min',
        uploadDate: 'Oct 16, 2024',
        description: 'Real IELTS speaking test questions with sample answers'
      },
      {
        id: 6,
        title: 'Reading Strategies Workshop',
        type: 'Video',
        duration: '52 min',
        uploadDate: 'Oct 14, 2024',
        description: 'Techniques to improve reading speed and comprehension'
      },
    ]
  }
];

// Practice exercises by category
const practiceExercises = [
  {
    category: 'Grammar',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M4 7V4h16v3M9 20h6M12 4v16"></path>
    </svg>`,
    color: '#3b82f6',
    exercises: [
      { id: 1, title: 'Present Perfect vs Past Simple', level: 'B2', questions: 25, completed: 18 },
      { id: 2, title: 'Conditional Sentences', level: 'B2', questions: 30, completed: 30 },
      { id: 3, title: 'Modal Verbs in Context', level: 'B1-B2', questions: 20, completed: 12 },
    ]
  },
  {
    category: 'Vocabulary',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
      <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
    </svg>`,
    color: '#8b5cf6',
    exercises: [
      { id: 4, title: 'Business Vocabulary Challenge', level: 'B2-C1', questions: 40, completed: 40 },
      { id: 5, title: 'Phrasal Verbs Practice', level: 'B2', questions: 35, completed: 20 },
      { id: 6, title: 'Academic Word List', level: 'C1', questions: 50, completed: 0 },
    ]
  },
  {
    category: 'Speaking',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path>
      <path d="M19 10v2a7 7 0 0 1-14 0v-2"></path>
      <line x1="12" y1="19" x2="12" y2="23"></line>
      <line x1="8" y1="23" x2="16" y2="23"></line>
    </svg>`,
    color: '#ec4899',
    exercises: [
      { id: 7, title: 'Topic-based Discussion Practice', level: 'B2', questions: 15, completed: 8 },
      { id: 8, title: 'Pronunciation Drills', level: 'All Levels', questions: 50, completed: 35 },
      { id: 9, title: 'Interview Simulation', level: 'B2-C1', questions: 12, completed: 0 },
    ]
  },
  {
    category: 'Writing',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M12 19l7-7 3 3-7 7-3-3z"></path>
      <path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path>
      <path d="M2 2l7.586 7.586"></path>
      <circle cx="11" cy="11" r="2"></circle>
    </svg>`,
    color: '#f59e0b',
    exercises: [
      { id: 10, title: 'Essay Writing Practice', level: 'B2-C1', questions: 10, completed: 6 },
      { id: 11, title: 'Report Writing Skills', level: 'B2', questions: 8, completed: 4 },
      { id: 12, title: 'Creative Writing Prompts', level: 'B1-B2', questions: 20, completed: 15 },
    ]
  }
];

// Digital library
const digitalLibrary = [
  {
    type: 'Books',
    items: [
      { id: 1, title: 'English Grammar in Use', author: 'Raymond Murphy', level: 'Intermediate', pages: 380, format: 'PDF' },
      { id: 2, title: 'Cambridge English Business Benchmark', author: 'Guy Brook-Hart', level: 'B2', pages: 200, format: 'PDF' },
      { id: 3, title: 'IELTS Trainer', author: 'Cambridge', level: 'Advanced', pages: 216, format: 'Interactive PDF' },
      { id: 4, title: 'Professional English in Use', author: 'Cambridge', level: 'B2-C1', pages: 145, format: 'PDF' },
    ]
  },
  {
    type: 'Articles',
    items: [
      { id: 5, title: 'The Future of Business Communication', source: 'British Council', readTime: '8 min', date: 'Sep 2024' },
      { id: 6, title: 'Mastering IELTS Speaking', source: 'BC Learning Hub', readTime: '12 min', date: 'Oct 2024' },
      { id: 7, title: 'Cultural Differences in Business English', source: 'BC Insights', readTime: '10 min', date: 'Oct 2024' },
    ]
  }
];

// Video tutorials
const videoTutorials = [
  { id: 1, title: 'Business English: Meetings and Negotiations', duration: '1h 15m', instructor: 'Sarah Williams', views: 1250, thumbnail: 'video' },
  { id: 2, title: 'IELTS Writing Masterclass', duration: '58m', instructor: 'James Morrison', views: 2340, thumbnail: 'video' },
  { id: 3, title: 'Advanced Grammar Techniques', duration: '45m', instructor: 'Emma Thompson', views: 980, thumbnail: 'video' },
  { id: 4, title: 'Pronunciation Workshop', duration: '32m', instructor: 'Michael Brown', views: 1560, thumbnail: 'video' },
];

// Audio materials
const audioMaterials = [
  { id: 1, title: 'British Council Podcasts - Business Series', duration: '6 episodes', level: 'B2-C1', downloads: 540 },
  { id: 2, title: 'IELTS Listening Practice Tests', duration: '30 min each', level: 'Advanced', downloads: 890 },
  { id: 3, title: 'Everyday Conversations', duration: '12 episodes', level: 'B1-B2', downloads: 720 },
  { id: 4, title: 'Academic English Lectures', duration: '8 episodes', level: 'C1', downloads: 340 },
];

// Recommended resources based on level
const recommendedResources = [
  {
    title: 'Business Presentation Skills Pack',
    description: 'Complete package including templates, video guides, and interactive exercises',
    level: 'B2',
    type: 'Interactive',
    recommended: true,
    includes: ['15 Video Lessons', '50+ Templates', 'Practice Activities', 'Certificate']
  },
  {
    title: 'IELTS Success Bundle',
    description: 'Comprehensive preparation materials for all four IELTS skills',
    level: 'Advanced',
    type: 'Bundle',
    recommended: true,
    includes: ['Practice Tests', 'Video Tutorials', 'Writing Feedback', 'Speaking Practice']
  },
  {
    title: 'Advanced Grammar Workbook',
    description: 'Interactive exercises with instant feedback and explanations',
    level: 'B2-C1',
    type: 'Interactive',
    recommended: true,
    includes: ['200+ Exercises', 'Video Explanations', 'Progress Tracking', 'Mobile App']
  },
];

// Resource categories with counts
const resourceCategories = [
  { name: 'Course Materials', icon: 'folder', count: 45, color: '#3b82f6' },
  { name: 'Practice Exercises', icon: 'clipboard', count: 128, color: '#8b5cf6' },
  { name: 'Digital Library', icon: 'book', count: 67, color: '#10b981' },
  { name: 'Video Tutorials', icon: 'video', count: 34, color: '#f59e0b' },
  { name: 'Audio Materials', icon: 'headphones', count: 52, color: '#ec4899' },
  { name: 'Worksheets', icon: 'file', count: 89, color: '#06b6d4' },
];

// Downloadable worksheets
const worksheets = [
  { id: 1, title: 'Grammar Review Worksheet Pack', level: 'B2', pages: 12, downloads: 234 },
  { id: 2, title: 'Vocabulary Building Exercises', level: 'B1-B2', pages: 8, downloads: 456 },
  { id: 3, title: 'IELTS Writing Templates', level: 'Advanced', pages: 15, downloads: 678 },
  { id: 4, title: 'Business English Scenarios', level: 'B2-C1', pages: 10, downloads: 345 },
];
---

<DashboardLayout title="Resources" currentPage="resources">
  <SidebarNav slot="sidebar" currentPage="resources" />

  <div slot="header">
    <div>
      <h1 class="header-title">Learning Resources</h1>
      <p class="header-subtitle">Access all your course materials, practice exercises, and digital library</p>
    </div>
    <div class="header-stats">
      <div class="stat-item">
        <span class="stat-value">234</span>
        <span class="stat-label">Resources</span>
      </div>
      <div class="stat-item">
        <span class="stat-value">45</span>
        <span class="stat-label">Downloaded</span>
      </div>
    </div>
  </div>

  <!-- Search and Filters -->
  <section class="search-section">
    <div class="search-bar">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="11" cy="11" r="8"></circle>
        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
      </svg>
      <input type="text" placeholder="Search resources, materials, exercises..." />
    </div>
    <div class="filters">
      <select class="filter-select">
        <option>All Types</option>
        <option>PDF</option>
        <option>Video</option>
        <option>Audio</option>
        <option>Interactive</option>
      </select>
      <select class="filter-select">
        <option>All Levels</option>
        <option>A1-A2</option>
        <option>B1</option>
        <option>B2</option>
        <option>C1-C2</option>
      </select>
      <select class="filter-select">
        <option>All Categories</option>
        <option>Grammar</option>
        <option>Vocabulary</option>
        <option>Speaking</option>
        <option>Writing</option>
        <option>Listening</option>
        <option>Reading</option>
      </select>
      <button class="filter-btn">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="4" y1="21" x2="4" y2="14"></line>
          <line x1="4" y1="10" x2="4" y2="3"></line>
          <line x1="12" y1="21" x2="12" y2="12"></line>
          <line x1="12" y1="8" x2="12" y2="3"></line>
          <line x1="20" y1="21" x2="20" y2="16"></line>
          <line x1="20" y1="12" x2="20" y2="3"></line>
          <line x1="1" y1="14" x2="7" y2="14"></line>
          <line x1="9" y1="8" x2="15" y2="8"></line>
          <line x1="17" y1="16" x2="23" y2="16"></line>
        </svg>
        More Filters
      </button>
    </div>
  </section>

  <!-- Resource Categories Overview -->
  <section class="categories-overview">
    <div class="categories-grid">
      {resourceCategories.map((category) => (
        <div class="category-card" style={`border-left-color: ${category.color}`}>
          <div class="category-icon" style={`background: linear-gradient(135deg, ${category.color}22, ${category.color}11)`}>
            {category.icon === 'folder' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
              </svg>
            )}
            {category.icon === 'clipboard' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
              </svg>
            )}
            {category.icon === 'book' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
                <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
              </svg>
            )}
            {category.icon === 'video' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <polygon points="23 7 16 12 23 17 23 7"></polygon>
                <rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>
              </svg>
            )}
            {category.icon === 'headphones' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <path d="M3 18v-6a9 9 0 0 1 18 0v6"></path>
                <path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>
              </svg>
            )}
            {category.icon === 'file' && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke={category.color} stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                <polyline points="14 2 14 8 20 8"></polyline>
              </svg>
            )}
          </div>
          <div class="category-info">
            <h3 class="category-name">{category.name}</h3>
            <p class="category-count">{category.count} items</p>
          </div>
          <button class="category-arrow">→</button>
        </div>
      ))}
    </div>
  </section>

  <!-- Recommended Resources -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
        </svg>
        Recommended for Your Level (B2)
      </h2>
    </div>
    <div class="recommended-grid">
      {recommendedResources.map((resource) => (
        <div class="recommended-resource-card">
          <div class="recommended-badge">Recommended</div>
          <h3 class="resource-title">{resource.title}</h3>
          <p class="resource-description">{resource.description}</p>
          <div class="resource-meta">
            <span class="meta-badge level-badge">{resource.level}</span>
            <span class="meta-badge type-badge">{resource.type}</span>
          </div>
          <div class="resource-includes">
            <p class="includes-title">Includes:</p>
            <ul class="includes-list">
              {resource.includes.map((item) => (
                <li>
                  <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="20 6 9 17 4 12"></polyline>
                  </svg>
                  {item}
                </li>
              ))}
            </ul>
          </div>
          <button class="resource-action-btn">Access Resource</button>
        </div>
      ))}
    </div>
  </section>

  <!-- Course Materials -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
        </svg>
        Course Materials
      </h2>
    </div>
    {courseMaterials.map((course) => (
      <div class="course-materials-section">
        <h3 class="course-section-title">{course.courseName}</h3>
        <div class="materials-grid">
          {course.materials.map((material) => (
            <div class="material-card">
              <div class="material-header">
                <div class="material-type-icon" class={material.type.toLowerCase()}>
                  {material.type === 'PDF' && (
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                      <polyline points="14 2 14 8 20 8"></polyline>
                      <line x1="16" y1="13" x2="8" y2="13"></line>
                      <line x1="16" y1="17" x2="8" y2="17"></line>
                    </svg>
                  )}
                  {material.type === 'Video' && (
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <polygon points="5 3 19 12 5 21 5 3"></polygon>
                    </svg>
                  )}
                  {material.type === 'Audio' && (
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>
                      <path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>
                    </svg>
                  )}
                </div>
                <span class="material-type-badge">{material.type}</span>
              </div>
              <h4 class="material-title">{material.title}</h4>
              <p class="material-description">{material.description}</p>
              <div class="material-meta">
                <span class="meta-item">
                  <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polyline points="12 6 12 12 16 14"></polyline>
                  </svg>
                  {material.size || material.duration}
                </span>
                <span class="meta-item">
                  <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                    <line x1="16" y1="2" x2="16" y2="6"></line>
                    <line x1="8" y1="2" x2="8" y2="6"></line>
                    <line x1="3" y1="10" x2="21" y2="10"></line>
                  </svg>
                  {material.uploadDate}
                </span>
              </div>
              <div class="material-actions">
                <button class="action-btn view-btn">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                    <circle cx="12" cy="12" r="3"></circle>
                  </svg>
                  View
                </button>
                <button class="action-btn download-btn">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                    <polyline points="7 10 12 15 17 10"></polyline>
                    <line x1="12" y1="15" x2="12" y2="3"></line>
                  </svg>
                  Download
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </section>

  <!-- Practice Exercises -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
          <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
        </svg>
        Practice Exercises
      </h2>
    </div>
    <div class="exercises-container">
      {practiceExercises.map((category) => (
        <div class="exercise-category">
          <div class="exercise-category-header">
            <div class="category-icon-wrapper" style={`background: ${category.color}22; color: ${category.color}`}>
              <span set:html={category.icon} />
            </div>
            <h3 class="exercise-category-title">{category.category}</h3>
            <span class="exercise-count">{category.exercises.length} exercises</span>
          </div>
          <div class="exercise-list">
            {category.exercises.map((exercise) => (
              <div class="exercise-card">
                <div class="exercise-info">
                  <h4 class="exercise-title">{exercise.title}</h4>
                  <div class="exercise-details">
                    <span class="level-badge">{exercise.level}</span>
                    <span class="questions-count">{exercise.questions} questions</span>
                  </div>
                </div>
                <div class="exercise-progress-section">
                  <div class="progress-info">
                    <span class="progress-text">{exercise.completed}/{exercise.questions}</span>
                    <span class="progress-percentage">{Math.round((exercise.completed / exercise.questions) * 100)}%</span>
                  </div>
                  <div class="progress-bar">
                    <div class="progress-fill" style={`width: ${(exercise.completed / exercise.questions) * 100}%; background: ${category.color}`}></div>
                  </div>
                  <button class="start-exercise-btn" style={`background: linear-gradient(135deg, ${category.color}, ${category.color}dd)`}>
                    {exercise.completed === 0 ? 'Start' : exercise.completed === exercise.questions ? 'Review' : 'Continue'}
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Digital Library -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
          <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
        </svg>
        Digital Library
      </h2>
      <a href="#" class="view-all-link">View All →</a>
    </div>

    {digitalLibrary.map((section) => (
      <div class="library-section">
        <h3 class="library-section-title">{section.type}</h3>
        <div class="library-grid">
          {section.items.map((item) => (
            <div class="library-card">
              <div class="library-icon">
                {section.type === 'Books' && (
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                    <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
                    <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
                  </svg>
                )}
                {section.type === 'Articles' && (
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                    <polyline points="14 2 14 8 20 8"></polyline>
                    <line x1="16" y1="13" x2="8" y2="13"></line>
                    <line x1="16" y1="17" x2="8" y2="17"></line>
                  </svg>
                )}
              </div>
              <h4 class="library-item-title">{item.title}</h4>
              {section.type === 'Books' ? (
                <>
                  <p class="library-author">{item.author}</p>
                  <div class="library-details">
                    <span class="detail-badge">{item.level}</span>
                    <span class="detail-text">{item.pages} pages</span>
                    <span class="detail-text">{item.format}</span>
                  </div>
                </>
              ) : (
                <>
                  <p class="library-source">{item.source}</p>
                  <div class="library-details">
                    <span class="detail-text">
                      <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <polyline points="12 6 12 12 16 14"></polyline>
                      </svg>
                      {item.readTime}
                    </span>
                    <span class="detail-text">{item.date}</span>
                  </div>
                </>
              )}
              <button class="library-action-btn">
                {section.type === 'Books' ? 'Read Now' : 'Read Article'}
              </button>
            </div>
          ))}
        </div>
      </div>
    ))}
  </section>

  <!-- Video Tutorials -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="23 7 16 12 23 17 23 7"></polygon>
          <rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>
        </svg>
        Video Tutorials
      </h2>
      <a href="#" class="view-all-link">View All →</a>
    </div>
    <div class="video-grid">
      {videoTutorials.map((video) => (
        <div class="video-card">
          <div class="video-thumbnail">
            <div class="play-button">
              <svg width="48" height="48" viewBox="0 0 24 24" fill="white">
                <polygon points="5 3 19 12 5 21 5 3"></polygon>
              </svg>
            </div>
            <span class="video-duration">{video.duration}</span>
          </div>
          <div class="video-content">
            <h4 class="video-title">{video.title}</h4>
            <p class="video-instructor">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                <circle cx="12" cy="7" r="4"></circle>
              </svg>
              {video.instructor}
            </p>
            <div class="video-meta">
              <span class="views">
                <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                  <circle cx="12" cy="12" r="3"></circle>
                </svg>
                {video.views.toLocaleString()} views
              </span>
            </div>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Audio Materials -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M3 18v-6a9 9 0 0 1 18 0v6"></path>
          <path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>
        </svg>
        Audio Materials
      </h2>
      <a href="#" class="view-all-link">View All →</a>
    </div>
    <div class="audio-grid">
      {audioMaterials.map((audio) => (
        <div class="audio-card">
          <div class="audio-icon">
            <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 18v-6a9 9 0 0 1 18 0v6"></path>
              <path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>
            </svg>
          </div>
          <h4 class="audio-title">{audio.title}</h4>
          <div class="audio-details">
            <span class="detail-item">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12 6 12 12 16 14"></polyline>
              </svg>
              {audio.duration}
            </span>
            <span class="level-badge">{audio.level}</span>
          </div>
          <div class="audio-footer">
            <span class="downloads">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                <polyline points="7 10 12 15 17 10"></polyline>
                <line x1="12" y1="15" x2="12" y2="3"></line>
              </svg>
              {audio.downloads} downloads
            </span>
            <button class="audio-play-btn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <polygon points="5 3 19 12 5 21 5 3"></polygon>
              </svg>
              Play
            </button>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Downloadable Worksheets -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14 2 14 8 20 8"></polyline>
        </svg>
        Downloadable Worksheets
      </h2>
      <a href="#" class="view-all-link">View All →</a>
    </div>
    <div class="worksheets-grid">
      {worksheets.map((worksheet) => (
        <div class="worksheet-card">
          <div class="worksheet-header">
            <div class="worksheet-icon">
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                <polyline points="14 2 14 8 20 8"></polyline>
                <line x1="16" y1="13" x2="8" y2="13"></line>
                <line x1="16" y1="17" x2="8" y2="17"></line>
              </svg>
            </div>
            <span class="pdf-badge">PDF</span>
          </div>
          <h4 class="worksheet-title">{worksheet.title}</h4>
          <div class="worksheet-meta">
            <span class="level-badge">{worksheet.level}</span>
            <span class="pages-count">{worksheet.pages} pages</span>
          </div>
          <div class="worksheet-footer">
            <span class="download-count">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                <polyline points="7 10 12 15 17 10"></polyline>
                <line x1="12" y1="15" x2="12" y2="3"></line>
              </svg>
              {worksheet.downloads} downloads
            </span>
            <button class="worksheet-download-btn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                <polyline points="7 10 12 15 17 10"></polyline>
                <line x1="12" y1="15" x2="12" y2="3"></line>
              </svg>
              Download
            </button>
          </div>
        </div>
      ))}
    </div>
  </section>
</DashboardLayout>

<style>
  .header-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 1rem;
    color: var(--bc-dark-gray);
  }

  .header-stats {
    display: flex;
    gap: 2rem;
  }

  .stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .stat-value {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  /* Search Section */
  .search-section {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .search-bar {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.875rem 1.25rem;
    background: white;
    border: 2px solid var(--bc-light-gray);
    border-radius: 12px;
    margin-bottom: 1rem;
    transition: all 0.2s ease;
  }

  .search-bar:focus-within {
    border-color: var(--bc-primary-blue);
    box-shadow: 0 0 0 3px rgba(35, 7, 90, 0.1);
  }

  .search-bar svg {
    color: var(--bc-dark-gray);
    flex-shrink: 0;
  }

  .search-bar input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 1rem;
    color: var(--bc-primary-blue);
  }

  .search-bar input::placeholder {
    color: var(--bc-dark-gray);
  }

  .filters {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .filter-select {
    padding: 0.625rem 1rem;
    border: 1px solid var(--bc-light-gray);
    border-radius: 10px;
    background: white;
    color: var(--bc-dark-gray);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-select:hover {
    border-color: var(--bc-primary-blue);
  }

  .filter-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    border: 1px solid var(--bc-light-gray);
    border-radius: 10px;
    background: white;
    color: var(--bc-dark-gray);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-btn:hover {
    background: var(--bc-primary-blue);
    color: white;
    border-color: var(--bc-primary-blue);
  }

  /* Categories Overview */
  .categories-overview {
    margin-bottom: 2.5rem;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1rem;
  }

  .category-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    border-left: 4px solid;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .category-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .category-icon {
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    flex-shrink: 0;
  }

  .category-info {
    flex: 1;
  }

  .category-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .category-count {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .category-arrow {
    font-size: 1.5rem;
    color: var(--bc-primary-blue);
    background: none;
    border: none;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .category-card:hover .category-arrow {
    transform: translateX(4px);
  }

  /* Section Styles */
  .section {
    margin-bottom: 2.5rem;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.375rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .view-all-link {
    font-size: 0.875rem;
    color: var(--bc-light-blue);
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .view-all-link:hover {
    color: var(--bc-primary-blue);
    transform: translateX(2px);
  }

  /* Recommended Resources */
  .recommended-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  .recommended-resource-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    position: relative;
    transition: all 0.3s ease;
  }

  .recommended-resource-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .recommended-badge {
    position: absolute;
    top: -8px;
    right: 1rem;
    background: linear-gradient(135deg, #f97316, #ea580c);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .resource-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .resource-description {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  .resource-meta {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .meta-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .level-badge {
    background: linear-gradient(135deg, var(--bc-light-pink), var(--bc-pink));
    color: white;
  }

  .type-badge {
    background: rgba(35, 7, 90, 0.1);
    color: var(--bc-primary-blue);
  }

  .resource-includes {
    margin-bottom: 1rem;
    padding: 1rem;
    background: rgba(35, 7, 90, 0.03);
    border-radius: 8px;
  }

  .includes-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .includes-list {
    list-style: none;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
  }

  .includes-list li {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .includes-list svg {
    color: #22c55e;
    flex-shrink: 0;
  }

  .resource-action-btn {
    width: 100%;
    padding: 0.75rem;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
    border-radius: 10px;
    font-size: 0.9375rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .resource-action-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  /* Course Materials */
  .course-materials-section {
    margin-bottom: 2rem;
  }

  .course-section-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 1rem;
    padding-left: 1rem;
    border-left: 4px solid var(--bc-pink);
  }

  .materials-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.25rem;
  }

  .material-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.25rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .material-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .material-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .material-type-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
  }

  .material-type-icon.pdf {
    background: linear-gradient(135deg, #ef444422, #ef444411);
    color: #ef4444;
  }

  .material-type-icon.video {
    background: linear-gradient(135deg, #3b82f622, #3b82f611);
    color: #3b82f6;
  }

  .material-type-icon.audio {
    background: linear-gradient(135deg, #8b5cf622, #8b5cf611);
    color: #8b5cf6;
  }

  .material-type-badge {
    padding: 0.25rem 0.625rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    background: rgba(35, 7, 90, 0.1);
    color: var(--bc-primary-blue);
  }

  .material-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .material-description {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  .material-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--bc-light-gray);
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .material-actions {
    display: flex;
    gap: 0.75rem;
  }

  .action-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.625rem;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .view-btn {
    background: rgba(35, 7, 90, 0.05);
    color: var(--bc-primary-blue);
    border: 1px solid var(--bc-light-gray);
  }

  .view-btn:hover {
    background: rgba(35, 7, 90, 0.1);
    border-color: var(--bc-primary-blue);
  }

  .download-btn {
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
  }

  .download-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  /* Practice Exercises */
  .exercises-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .exercise-category {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .exercise-category-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid var(--bc-light-gray);
  }

  .category-icon-wrapper {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
  }

  .exercise-category-title {
    flex: 1;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .exercise-count {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    font-weight: 500;
  }

  .exercise-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .exercise-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1.5rem;
    padding: 1.25rem;
    background: white;
    border-radius: 12px;
    border: 1px solid var(--bc-light-gray);
    transition: all 0.2s ease;
  }

  .exercise-card:hover {
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.08);
    border-color: var(--bc-primary-blue);
  }

  .exercise-info {
    flex: 1;
  }

  .exercise-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .exercise-details {
    display: flex;
    gap: 0.75rem;
    align-items: center;
  }

  .questions-count {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .exercise-progress-section {
    display: flex;
    align-items: center;
    gap: 1rem;
    min-width: 300px;
  }

  .progress-info {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.25rem;
    min-width: 60px;
  }

  .progress-text {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .progress-percentage {
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .progress-bar {
    flex: 1;
    height: 8px;
    background: var(--bc-light-gray);
    border-radius: 4px;
    overflow: hidden;
  }

  .progress-fill {
    height: 100%;
    border-radius: 4px;
    transition: width 0.3s ease;
  }

  .start-exercise-btn {
    padding: 0.625rem 1.25rem;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    white-space: nowrap;
    transition: all 0.2s ease;
  }

  .start-exercise-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  /* Digital Library */
  .library-section {
    margin-bottom: 2rem;
  }

  .library-section-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 1rem;
  }

  .library-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    gap: 1.25rem;
  }

  .library-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .library-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .library-icon {
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(35, 7, 90, 0.05), rgba(90, 58, 119, 0.05));
    border-radius: 12px;
    color: var(--bc-primary-blue);
    margin-bottom: 1rem;
  }

  .library-item-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .library-author,
  .library-source {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    margin-bottom: 0.75rem;
  }

  .library-details {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .detail-badge {
    padding: 0.25rem 0.625rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
    background: linear-gradient(135deg, var(--bc-light-pink), var(--bc-pink));
    color: white;
  }

  .detail-text {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .library-action-btn {
    width: 100%;
    padding: 0.625rem;
    background: transparent;
    color: var(--bc-primary-blue);
    border: 1px solid var(--bc-primary-blue);
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .library-action-btn:hover {
    background: var(--bc-primary-blue);
    color: white;
  }

  /* Video Tutorials */
  .video-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .video-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .video-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .video-thumbnail {
    position: relative;
    width: 100%;
    height: 160px;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }

  .play-button {
    width: 64px;
    height: 64px;
    background: rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }

  .video-card:hover .play-button {
    transform: scale(1.1);
    background: rgba(255, 255, 255, 0.4);
  }

  .video-duration {
    position: absolute;
    bottom: 0.75rem;
    right: 0.75rem;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .video-content {
    padding: 1.25rem;
  }

  .video-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
    line-height: 1.4;
  }

  .video-instructor {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    margin-bottom: 0.75rem;
  }

  .video-meta {
    display: flex;
    gap: 1rem;
  }

  .views {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  /* Audio Materials */
  .audio-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.25rem;
  }

  .audio-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .audio-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .audio-icon {
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(139, 92, 246, 0.05));
    border-radius: 12px;
    color: #8b5cf6;
    margin-bottom: 1rem;
  }

  .audio-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  .audio-details {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
    margin-bottom: 1rem;
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .audio-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid var(--bc-light-gray);
  }

  .downloads {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .audio-play-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: linear-gradient(135deg, #8b5cf6, #7c3aed);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .audio-play-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);
  }

  /* Worksheets */
  .worksheets-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.25rem;
  }

  .worksheet-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    transition: all 0.3s ease;
  }

  .worksheet-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .worksheet-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .worksheet-icon {
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(239, 68, 68, 0.05));
    border-radius: 12px;
    color: #ef4444;
  }

  .pdf-badge {
    padding: 0.25rem 0.625rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    background: #ef4444;
    color: white;
  }

  .worksheet-title {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  .worksheet-meta {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .pages-count {
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .worksheet-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid var(--bc-light-gray);
  }

  .download-count {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.75rem;
    color: var(--bc-dark-gray);
  }

  .worksheet-download-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .worksheet-download-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .categories-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    }

    .materials-grid,
    .library-grid,
    .video-grid,
    .audio-grid,
    .worksheets-grid {
      grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    }

    .exercise-progress-section {
      min-width: 250px;
    }
  }

  @media (max-width: 768px) {
    .header-stats {
      display: none;
    }

    .filters {
      flex-direction: column;
    }

    .filter-select,
    .filter-btn {
      width: 100%;
    }

    .categories-grid,
    .recommended-grid,
    .materials-grid,
    .library-grid,
    .video-grid,
    .audio-grid,
    .worksheets-grid {
      grid-template-columns: 1fr;
    }

    .exercise-card {
      flex-direction: column;
      align-items: flex-start;
    }

    .exercise-progress-section {
      width: 100%;
      min-width: unset;
    }

    .includes-list {
      grid-template-columns: 1fr;
    }
  }
</style>
