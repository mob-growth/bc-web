---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';
import CourseCard from '../../components/portal/CourseCard.astro';

// Mock data for courses
const currentCourses = [
  {
    courseName: 'Business English B2',
    level: 'B2',
    teacher: 'Sarah Williams',
    progress: 65,
    nextClass: 'Tomorrow, 18:00',
    schedule: 'Mon & Wed 18:00-19:30',
    image: 'https://mktgfiles.britishcouncil.org/hubfs/Global%20-%20Future%20of%20English/Corporate%20English%20Solutions.jpg'
  },
  {
    courseName: 'IELTS Preparation',
    level: 'Advanced',
    teacher: 'James Morrison',
    progress: 45,
    nextClass: 'Thursday, 17:00',
    schedule: 'Tue & Thu 17:00-18:30'
  },
  {
    courseName: 'Speaking Focus Group',
    level: 'B1-B2',
    teacher: 'Emma Thompson',
    progress: 80,
    nextClass: 'Friday, 19:00',
    schedule: 'Friday 19:00-20:00'
  }
];

const completedCourses = [
  {
    courseName: 'General English B1',
    level: 'B1',
    teacher: 'Michael Brown',
    progress: 100,
    completionDate: 'July 2024',
    grade: 'A',
    certificateAvailable: true
  },
  {
    courseName: 'Cambridge FCE Prep',
    level: 'B2',
    teacher: 'Lisa Anderson',
    progress: 100,
    completionDate: 'March 2024',
    grade: 'B+',
    certificateAvailable: true
  }
];

const recommendedCourses = [
  {
    courseName: 'Advanced Business Writing',
    level: 'C1',
    duration: '3 months',
    startDate: 'January 2025',
    price: '€280/month'
  },
  {
    courseName: 'Cambridge CAE Preparation',
    level: 'C1',
    duration: '4 months',
    startDate: 'February 2025',
    price: '€320/month'
  },
  {
    courseName: 'Professional Presentations',
    level: 'B2-C1',
    duration: '2 months',
    startDate: 'January 2025',
    price: '€250/month'
  }
];
---

<DashboardLayout title="My Courses" currentPage="my-courses">
  <SidebarNav slot="sidebar" currentPage="my-courses" />

  <div slot="header">
    <div>
      <h1 class="header-title">My Courses</h1>
      <p class="header-subtitle">Manage your enrolled courses and discover new ones</p>
    </div>
    <div class="header-actions">
      <button class="filter-btn active">All</button>
      <button class="filter-btn">Active</button>
      <button class="filter-btn">Completed</button>
      <button class="filter-btn">Available</button>
    </div>
  </div>

  <!-- Current Courses -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="10"></circle>
          <polyline points="12 6 12 12 16 14"></polyline>
        </svg>
        Current Courses
      </h2>
      <span class="course-count">{currentCourses.length} Active</span>
    </div>
    <div class="courses-grid">
      {currentCourses.map((course) => (
        <CourseCard {...course} />
      ))}
    </div>
  </section>

  <!-- Completed Courses -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
          <polyline points="22 4 12 14.01 9 11.01"></polyline>
        </svg>
        Completed Courses
      </h2>
      <span class="course-count">{completedCourses.length} Completed</span>
    </div>
    <div class="completed-grid">
      {completedCourses.map((course) => (
        <div class="completed-card">
          <div class="completed-header">
            <div>
              <h3 class="course-name">{course.courseName}</h3>
              <p class="course-meta">
                <span class="level-badge">{course.level}</span>
                <span class="teacher">Teacher: {course.teacher}</span>
              </p>
            </div>
            <div class="grade-badge">
              Grade: {course.grade}
            </div>
          </div>
          <div class="completed-info">
            <p class="completion-date">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Completed: {course.completionDate}
            </p>
            {course.certificateAvailable && (
              <button class="certificate-btn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                  <polyline points="14 2 14 8 20 8"></polyline>
                  <line x1="16" y1="13" x2="8" y2="13"></line>
                  <line x1="16" y1="17" x2="8" y2="17"></line>
                </svg>
                Download Certificate
              </button>
            )}
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Recommended Courses -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
        </svg>
        Recommended for You
      </h2>
      <a href="#" class="view-all-link">Browse All Courses →</a>
    </div>
    <div class="recommended-grid">
      {recommendedCourses.map((course) => (
        <div class="recommended-card">
          <div class="recommended-badge">Recommended</div>
          <h3 class="course-name">{course.courseName}</h3>
          <div class="course-details">
            <span class="detail-item">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12 6 12 12 16 14"></polyline>
              </svg>
              {course.duration}
            </span>
            <span class="detail-item">
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Starts {course.startDate}
            </span>
          </div>
          <div class="course-footer">
            <span class="price">{course.price}</span>
            <button class="enroll-btn">Learn More</button>
          </div>
        </div>
      ))}
    </div>
  </section>
</DashboardLayout>

<style>
  .header-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 1rem;
    color: var(--bc-dark-gray);
  }

  .header-actions {
    display: flex;
    gap: 0.75rem;
  }

  .filter-btn {
    padding: 0.5rem 1.25rem;
    border-radius: 20px;
    border: 1px solid var(--bc-light-gray);
    background: white;
    color: var(--bc-dark-gray);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-btn:hover {
    background: rgba(35, 7, 90, 0.05);
    border-color: var(--bc-primary-blue);
  }

  .filter-btn.active {
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
  }

  .section {
    margin-bottom: 2.5rem;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.375rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .course-count,
  .view-all-link {
    font-size: 0.875rem;
    color: var(--bc-light-blue);
    font-weight: 500;
  }

  .view-all-link {
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .view-all-link:hover {
    color: var(--bc-primary-blue);
    transform: translateX(2px);
  }

  .courses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
    gap: 1.5rem;
  }

  /* Completed Courses */
  .completed-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
    gap: 1.5rem;
  }

  .completed-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    border: 2px solid #22c55e;
  }

  .completed-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 1rem;
  }

  .course-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .course-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.875rem;
  }

  .level-badge {
    background: linear-gradient(135deg, var(--bc-light-pink), var(--bc-pink));
    color: white;
    padding: 0.125rem 0.5rem;
    border-radius: 6px;
    font-weight: 500;
  }

  .teacher {
    color: var(--bc-dark-gray);
  }

  .grade-badge {
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: white;
    padding: 0.375rem 0.75rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .completed-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .completion-date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--bc-dark-gray);
    font-size: 0.875rem;
  }

  .certificate-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-light-blue));
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .certificate-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.2);
  }

  /* Recommended Courses */
  .recommended-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .recommended-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    position: relative;
    transition: all 0.3s ease;
  }

  .recommended-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .recommended-badge {
    position: absolute;
    top: -8px;
    right: 1rem;
    background: linear-gradient(135deg, #f97316, #ea580c);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .course-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--bc-dark-gray);
    font-size: 0.875rem;
  }

  .course-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid var(--bc-light-gray);
  }

  .price {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
  }

  .enroll-btn {
    padding: 0.5rem 1.25rem;
    background: transparent;
    color: var(--bc-primary-blue);
    border: 1px solid var(--bc-primary-blue);
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .enroll-btn:hover {
    background: var(--bc-primary-blue);
    color: white;
  }

  @media (max-width: 768px) {
    .header-actions {
      flex-wrap: wrap;
    }

    .courses-grid,
    .completed-grid,
    .recommended-grid {
      grid-template-columns: 1fr;
    }

    .completed-info {
      flex-direction: column;
      align-items: start;
      gap: 1rem;
    }
  }
</style>