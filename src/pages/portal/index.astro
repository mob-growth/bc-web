---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';

// User data
const userData = {
  name: 'John',
  level: 'B2 Upper Intermediate',
  nextClass: {
    name: 'Business English B2',
    time: 'Tomorrow, 18:00 GMT',
    room: 'Room 3A / Online'
  },
  weeklyGoal: 5,
  weeklyProgress: 3
};

// Key metrics for English learning
const keyMetrics = [
  {
    label: 'Course Progress',
    value: '65',
    unit: '%',
    sublabel: '13 of 20 modules completed',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none">
      <circle cx="12" cy="12" r="10" stroke="#b794d4" stroke-width="2"/>
      <path d="M12 6v6l4 2" stroke="#ff9ec7" stroke-width="2" stroke-linecap="round"/>
    </svg>`
  },
  {
    label: 'Attendance Rate',
    value: '92',
    unit: '%',
    sublabel: '23 of 25 classes attended',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none">
      <path d="M9 11l3 3L22 4" stroke="#10b981" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M21 12v7a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h11" stroke="#b794d4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>`
  },
  {
    label: 'Average Score',
    value: '78',
    unit: '%',
    sublabel: 'B2 level proficiency',
    icon: `<svg width="20" height="20" viewBox="0 0 24 24" fill="none">
      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" stroke="#ffd4e8" stroke-width="2" fill="#ffd4e8" opacity="0.3"/>
    </svg>`
  }
];

// Upcoming assignments
const upcomingAssignments = [
  {
    title: 'Essay: Business Communication',
    due: '2 days',
    type: 'writing',
    priority: 'high'
  },
  {
    title: 'Speaking Practice: Presentation',
    due: '5 days',
    type: 'speaking',
    priority: 'medium'
  },
  {
    title: 'Grammar Quiz: Conditionals',
    due: '1 week',
    type: 'quiz',
    priority: 'low'
  }
];

// Recent grades
const recentGrades = [
  { assignment: 'Vocabulary Test', score: 85, date: '2 days ago' },
  { assignment: 'Listening Exercise', score: 78, date: '1 week ago' },
  { assignment: 'Writing Task', score: 82, date: '2 weeks ago' }
];

// Learning streak data
const streakData = {
  current: 15,
  best: 28,
  weeklyTarget: 5,
  daysCompleted: 3
};
---

<DashboardLayout title="Dashboard" currentPage="dashboard">
  <SidebarNav slot="sidebar" currentPage="dashboard" />

  <div slot="header" class="header-content">
    <div>
      <h1 class="header-title">Welcome back, {userData.name}</h1>
      <p class="header-subtitle">Current Level: {userData.level}</p>
    </div>
  </div>

  <div class="dashboard-container">

    <!-- Next Class Card -->
    <div class="next-class-card">
      <div class="card-header">
        <h2 class="card-title">Next Class</h2>
        <span class="status-badge online">Online</span>
      </div>
      <div class="class-info">
        <h3 class="class-name">{userData.nextClass.name}</h3>
        <div class="class-details">
          <span class="detail-item">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"/>
              <path d="M12 6v6l4 2"/>
            </svg>
            {userData.nextClass.time}
          </span>
          <span class="detail-item">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
              <circle cx="12" cy="10" r="3"/>
            </svg>
            {userData.nextClass.room}
          </span>
        </div>
      </div>
      <button class="join-btn">Join Class</button>
    </div>

    <!-- Key Metrics -->
    <div class="metrics-grid">
      {keyMetrics.map((metric) => (
        <div class="metric-card">
          <div class="metric-header">
            <span class="metric-icon" set:html={metric.icon} />
            <span class="metric-label">{metric.label}</span>
          </div>
          <div class="metric-value">
            <span class="value-number">{metric.value}</span>
            <span class="value-unit">{metric.unit}</span>
          </div>
          <p class="metric-sublabel">{metric.sublabel}</p>
        </div>
      ))}
    </div>

    <!-- Two Column Layout -->
    <div class="content-grid">

      <!-- Left Column -->
      <div class="left-column">

        <!-- Upcoming Assignments -->
        <div class="assignments-card">
          <div class="card-header">
            <h2 class="card-title">Upcoming Assignments</h2>
            <a href="/portal/assignments" class="view-link">View all</a>
          </div>
          <div class="assignments-list">
            {upcomingAssignments.map((assignment) => (
              <div class="assignment-item">
                <div class="assignment-info">
                  <h4 class="assignment-title">{assignment.title}</h4>
                  <span class="assignment-due">Due in {assignment.due}</span>
                </div>
                <span class={`priority-badge ${assignment.priority}`}>
                  {assignment.priority}
                </span>
              </div>
            ))}
          </div>
        </div>

        <!-- Learning Streak -->
        <div class="streak-card">
          <div class="card-header">
            <h2 class="card-title">Learning Streak</h2>
          </div>
          <div class="streak-content">
            <div class="streak-main">
              <svg width="40" height="40" viewBox="0 0 24 24" fill="none">
                <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" fill="#ffcce0" opacity="0.3"/>
                <path d="M8 12C8 14 10 16 12 16C14 16 16 14 16 12C16 10 12 4 12 4C12 4 8 10 8 12Z" fill="#ffd4e8"/>
                <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="#ff9ec7" stroke-width="2"/>
              </svg>
              <div class="streak-numbers">
                <span class="current-streak">{streakData.current} days</span>
                <span class="streak-label">Current streak</span>
              </div>
            </div>
            <div class="streak-stats">
              <div class="streak-stat">
                <span class="stat-label">Best</span>
                <span class="stat-value">{streakData.best} days</span>
              </div>
              <div class="streak-stat">
                <span class="stat-label">This week</span>
                <span class="stat-value">{streakData.daysCompleted}/{streakData.weeklyTarget} days</span>
              </div>
            </div>
          </div>
        </div>

      </div>

      <!-- Right Column -->
      <div class="right-column">

        <!-- Recent Grades -->
        <div class="grades-card">
          <div class="card-header">
            <h2 class="card-title">Recent Grades</h2>
            <a href="/portal/progress" class="view-link">View progress</a>
          </div>
          <div class="grades-list">
            {recentGrades.map((grade) => (
              <div class="grade-item">
                <div class="grade-info">
                  <h4 class="grade-assignment">{grade.assignment}</h4>
                  <span class="grade-date">{grade.date}</span>
                </div>
                <div class="grade-score">
                  <span class={`score ${grade.score >= 80 ? 'high' : grade.score >= 70 ? 'medium' : 'low'}`}>
                    {grade.score}%
                  </span>
                </div>
              </div>
            ))}
          </div>
          <div class="average-section">
            <span class="average-label">Average Score</span>
            <span class="average-value">81.7%</span>
          </div>
        </div>

        <!-- Weekly Goal Progress -->
        <div class="goal-card">
          <div class="card-header">
            <h2 class="card-title">Weekly Goal</h2>
          </div>
          <div class="goal-content">
            <div class="goal-progress">
              <div class="progress-bar">
                <div class="progress-fill" style={`width: ${(userData.weeklyProgress / userData.weeklyGoal) * 100}%`}></div>
              </div>
              <span class="goal-text">{userData.weeklyProgress} of {userData.weeklyGoal} classes attended</span>
            </div>
            <div class="goal-days">
              {[...Array(7)].map((_, i) => (
                <div class={`day ${i < userData.weeklyProgress ? 'completed' : ''} ${i === userData.weeklyProgress - 1 ? 'current' : ''}`}>
                  {['M', 'T', 'W', 'T', 'F', 'S', 'S'][i]}
                </div>
              ))}
            </div>
          </div>
        </div>

      </div>
    </div>

  </div>
</DashboardLayout>

<style>
  /* Dashboard Container */
  .dashboard-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 0;
    max-width: 1400px;
    margin: 0 auto;
  }

  /* Animations */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  /* Header */
  .header-content {
    width: 100%;
  }

  .header-title {
    font-size: 1.75rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 0.9375rem;
    color: var(--bc-medium-gray);
  }

  /* Next Class Card */
  .next-class-card {
    background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.95) 0%,
      rgba(255, 255, 255, 0.9) 100%
    );
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 2rem;
    box-shadow:
      0 8px 32px rgba(35, 7, 90, 0.08),
      0 2px 8px rgba(183, 148, 212, 0.12),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.5);
    position: relative;
    overflow: hidden;
    animation: slideInUp 0.5s ease-out;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .next-class-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 50%,
      var(--bc-pink) 100%
    );
    border-radius: 16px 16px 0 0;
  }

  .next-class-card:hover {
    transform: translateY(-4px);
    box-shadow:
      0 12px 48px rgba(35, 7, 90, 0.12),
      0 4px 12px rgba(183, 148, 212, 0.16),
      inset 0 1px 0 rgba(255, 255, 255, 0.9);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .card-title {
    font-size: 1.125rem;
    font-weight: 700;
    background: linear-gradient(135deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
  }

  .status-badge.online {
    background: #e6f7ff;
    color: #0066cc;
  }

  .class-info {
    margin-bottom: 1.25rem;
  }

  .class-name {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--bc-dark-gray);
    margin-bottom: 0.75rem;
  }

  .class-details {
    display: flex;
    gap: 1.5rem;
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
  }

  .detail-item svg {
    stroke: var(--bc-medium-gray);
  }

  .join-btn {
    padding: 0.75rem 2rem;
    background: linear-gradient(135deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 100%
    );
    color: white;
    border: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    border-radius: 12px;
    font-weight: 600;
    font-size: 0.9375rem;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow:
      0 4px 12px rgba(35, 7, 90, 0.2),
      0 2px 4px rgba(35, 7, 90, 0.1);
    position: relative;
    overflow: hidden;
  }

  .join-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg,
      var(--bc-purple) 0%,
      var(--bc-pink) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .join-btn:hover {
    transform: translateY(-2px);
    box-shadow:
      0 6px 20px rgba(35, 7, 90, 0.25),
      0 4px 8px rgba(35, 7, 90, 0.15);
  }

  .join-btn:hover::before {
    opacity: 1;
  }

  .join-btn:active {
    transform: translateY(0);
  }

  .join-btn > * {
    position: relative;
    z-index: 1;
  }

  /* Key Metrics Grid */
  .metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.25rem;
    animation: slideInUp 0.6s ease-out 0.1s both;
  }

  .metric-card {
    background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.95) 0%,
      rgba(255, 255, 255, 0.85) 100%
    );
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow:
      0 4px 20px rgba(35, 7, 90, 0.06),
      0 1px 4px rgba(183, 148, 212, 0.08),
      inset 0 1px 0 rgba(255, 255, 255, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.4);
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .metric-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg,
      transparent 0%,
      rgba(183, 148, 212, 0.5) 50%,
      transparent 100%
    );
  }

  .metric-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow:
      0 8px 32px rgba(35, 7, 90, 0.1),
      0 2px 8px rgba(183, 148, 212, 0.12),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
    border-color: rgba(183, 148, 212, 0.3);
  }

  .metric-card:nth-child(1) {
    animation-delay: 0.15s;
  }

  .metric-card:nth-child(2) {
    animation-delay: 0.2s;
  }

  .metric-card:nth-child(3) {
    animation-delay: 0.25s;
  }

  .metric-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .metric-icon {
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    background: linear-gradient(135deg,
      rgba(183, 148, 212, 0.15) 0%,
      rgba(255, 158, 199, 0.15) 100%
    );
    transition: all 0.3s ease;
  }

  .metric-card:hover .metric-icon {
    transform: scale(1.1) rotate(5deg);
    background: linear-gradient(135deg,
      rgba(183, 148, 212, 0.25) 0%,
      rgba(255, 158, 199, 0.25) 100%
    );
  }

  .metric-icon svg {
    width: 22px;
    height: 22px;
  }

  .metric-label {
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
    font-weight: 500;
  }

  .metric-value {
    display: flex;
    align-items: baseline;
    gap: 0.25rem;
    margin-bottom: 0.5rem;
  }

  .value-number {
    font-size: 2.25rem;
    font-weight: 700;
    background: linear-gradient(135deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.2;
  }

  .value-unit {
    font-size: 1.5rem;
    font-weight: 600;
    background: linear-gradient(135deg,
      var(--bc-purple) 0%,
      var(--bc-pink) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .metric-sublabel {
    font-size: 0.8125rem;
    color: var(--bc-medium-gray);
  }

  /* Content Grid */
  .content-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
  }

  .left-column,
  .right-column {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  /* Card Styles */
  .assignments-card,
  .grades-card,
  .streak-card,
  .goal-card {
    background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.95) 0%,
      rgba(255, 255, 255, 0.9) 100%
    );
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.75rem;
    box-shadow:
      0 4px 20px rgba(35, 7, 90, 0.06),
      0 1px 4px rgba(183, 148, 212, 0.08),
      inset 0 1px 0 rgba(255, 255, 255, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.4);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    animation: slideInUp 0.7s ease-out 0.3s both;
  }

  .assignments-card:hover,
  .grades-card:hover,
  .streak-card:hover,
  .goal-card:hover {
    transform: translateY(-4px);
    box-shadow:
      0 8px 32px rgba(35, 7, 90, 0.1),
      0 2px 8px rgba(183, 148, 212, 0.12),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
  }

  .view-link {
    font-size: 0.875rem;
    color: var(--bc-primary-blue);
    text-decoration: none;
    font-weight: 600;
    transition: all 0.2s ease;
    position: relative;
    padding-bottom: 2px;
  }

  .view-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg,
      var(--bc-primary-blue) 0%,
      var(--bc-pink) 100%
    );
    transition: width 0.3s ease;
  }

  .view-link:hover {
    color: var(--bc-purple);
  }

  .view-link:hover::after {
    width: 100%;
  }

  /* Assignments */
  .assignments-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1rem;
  }

  .assignment-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    background: linear-gradient(135deg,
      rgba(248, 249, 250, 0.8) 0%,
      rgba(255, 255, 255, 0.6) 100%
    );
    border-radius: 12px;
    border: 1px solid rgba(183, 148, 212, 0.1);
    transition: all 0.2s ease;
  }

  .assignment-item:hover {
    background: linear-gradient(135deg,
      rgba(232, 217, 245, 0.3) 0%,
      rgba(255, 255, 255, 0.8) 100%
    );
    border-color: rgba(183, 148, 212, 0.2);
    transform: translateX(4px);
  }

  .assignment-info {
    flex: 1;
  }

  .assignment-title {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--bc-dark-gray);
    margin-bottom: 0.25rem;
  }

  .assignment-due {
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
  }

  .priority-badge {
    padding: 0.375rem 0.75rem;
    border-radius: 8px;
    font-size: 0.6875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
  }

  .priority-badge.high {
    background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
    color: #dc2626;
    border: 1px solid #fca5a5;
  }

  .priority-badge.medium {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    color: #d97706;
    border: 1px solid #fcd34d;
  }

  .priority-badge.low {
    background: linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%);
    color: #4f46e5;
    border: 1px solid #a5b4fc;
  }

  /* Learning Streak */
  .streak-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .streak-main {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .streak-numbers {
    display: flex;
    flex-direction: column;
  }

  .current-streak {
    font-size: 1.75rem;
    font-weight: 700;
    background: linear-gradient(135deg,
      var(--bc-pink) 0%,
      var(--bc-purple) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .streak-label {
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
  }

  .streak-stats {
    display: flex;
    gap: 2rem;
    padding-top: 0.75rem;
    border-top: 1px solid #f0f0f0;
  }

  .streak-stat {
    display: flex;
    flex-direction: column;
  }

  .stat-label {
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
    margin-bottom: 0.25rem;
  }

  .stat-value {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--bc-dark-gray);
  }

  /* Grades */
  .grades-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1rem;
  }

  .grade-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    background: linear-gradient(135deg,
      rgba(248, 249, 250, 0.8) 0%,
      rgba(255, 255, 255, 0.6) 100%
    );
    border-radius: 12px;
    border: 1px solid rgba(183, 148, 212, 0.1);
    transition: all 0.2s ease;
  }

  .grade-item:hover {
    background: linear-gradient(135deg,
      rgba(232, 217, 245, 0.3) 0%,
      rgba(255, 255, 255, 0.8) 100%
    );
    border-color: rgba(183, 148, 212, 0.2);
    transform: translateX(4px);
  }

  .grade-info {
    flex: 1;
  }

  .grade-assignment {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--bc-dark-gray);
    margin-bottom: 0.25rem;
  }

  .grade-date {
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
  }

  .grade-score {
    display: flex;
    align-items: center;
  }

  .score {
    font-size: 1.25rem;
    font-weight: 700;
    padding: 0.5rem 0.75rem;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  }

  .score.high {
    background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
    color: #16a34a;
    border: 1px solid #86efac;
  }

  .score.medium {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    color: #d97706;
    border: 1px solid #fcd34d;
  }

  .score.low {
    background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
    color: #dc2626;
    border: 1px solid #fca5a5;
  }

  .average-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    margin-top: 1rem;
    border-top: 1px solid #f0f0f0;
  }

  .average-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--bc-medium-gray);
  }

  .average-value {
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(135deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Weekly Goal */
  .goal-content {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  .goal-progress {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .progress-bar {
    width: 100%;
    height: 10px;
    background: linear-gradient(135deg,
      rgba(240, 240, 240, 0.8) 0%,
      rgba(232, 217, 245, 0.3) 100%
    );
    border-radius: 10px;
    overflow: hidden;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.06);
    position: relative;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg,
      var(--bc-primary-blue) 0%,
      var(--bc-purple) 50%,
      var(--bc-pink) 100%
    );
    border-radius: 10px;
    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 8px rgba(183, 148, 212, 0.4);
    position: relative;
  }

  .progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(180deg,
      rgba(255, 255, 255, 0.3) 0%,
      transparent 100%
    );
    border-radius: 10px 10px 0 0;
  }

  .goal-text {
    font-size: 0.875rem;
    color: var(--bc-medium-gray);
  }

  .goal-days {
    display: flex;
    gap: 0.5rem;
    justify-content: space-between;
  }

  .day {
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: linear-gradient(135deg,
      rgba(240, 240, 240, 0.8) 0%,
      rgba(232, 217, 245, 0.3) 100%
    );
    color: var(--bc-medium-gray);
    font-size: 0.8125rem;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid transparent;
  }

  .day.completed {
    background: linear-gradient(135deg,
      var(--bc-purple) 0%,
      var(--bc-pink) 100%
    );
    color: white;
    box-shadow: 0 4px 12px rgba(183, 148, 212, 0.4);
    transform: scale(1.05);
  }

  .day.current {
    border-color: var(--bc-pink);
    box-shadow: 0 0 0 3px rgba(255, 158, 199, 0.2);
    transform: scale(1.1);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .content-grid {
      grid-template-columns: 1fr;
    }

    .metrics-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .class-details {
      flex-direction: column;
      gap: 0.5rem;
    }

    .goal-days {
      justify-content: center;
    }

    .streak-stats {
      gap: 1rem;
    }
  }
</style>