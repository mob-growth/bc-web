---
import DashboardLayout from '../../components/portal/DashboardLayout.astro';
import SidebarNav from '../../components/portal/SidebarNav.astro';
import QuickStats from '../../components/portal/QuickStats.astro';
import CourseCard from '../../components/portal/CourseCard.astro';

// Mock data for active courses
const activeCourses = [
  {
    courseName: 'Business English B2',
    level: 'B2',
    teacher: 'Sarah Williams',
    progress: 65,
    nextClass: 'Tomorrow, 18:00',
    schedule: 'Mon & Wed 18:00-19:30'
  },
  {
    courseName: 'IELTS Preparation',
    level: 'Advanced',
    teacher: 'James Morrison',
    progress: 45,
    nextClass: 'Thursday, 17:00',
    schedule: 'Tue & Thu 17:00-18:30'
  },
  {
    courseName: 'Speaking Focus Group',
    level: 'B1-B2',
    teacher: 'Emma Thompson',
    progress: 80,
    nextClass: 'Friday, 19:00',
    schedule: 'Friday 19:00-20:00'
  }
];

// Mock data for upcoming classes
const upcomingClasses = [
  {
    id: 1,
    courseName: 'Business English B2',
    time: '18:00 - 19:30',
    date: 'Tomorrow',
    room: 'Room 203',
    type: 'In-person'
  },
  {
    id: 2,
    courseName: 'IELTS Preparation',
    time: '17:00 - 18:30',
    date: 'Thursday',
    room: 'Online',
    type: 'Virtual'
  },
  {
    id: 3,
    courseName: 'Speaking Focus Group',
    time: '19:00 - 20:00',
    date: 'Friday',
    room: 'Room 105',
    type: 'In-person'
  }
];

// Mock data for recent achievements
const recentAchievements = [
  {
    id: 1,
    name: 'Perfect Attendance',
    description: 'Attended 10 classes in a row',
    icon: `<svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#ff9ec7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="10"></circle>
      <circle cx="12" cy="12" r="6"></circle>
      <circle cx="12" cy="12" r="2"></circle>
    </svg>`,
    date: '2 days ago'
  },
  {
    id: 2,
    name: 'Vocabulary Master',
    description: 'Learned 100 new words',
    icon: `<svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#b794d4" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
      <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
      <line x1="12" y1="6" x2="12" y2="12"></line>
      <line x1="9" y1="9" x2="15" y2="9"></line>
    </svg>`,
    date: '1 week ago'
  },
  {
    id: 3,
    name: 'Quiz Champion',
    description: 'Scored 95% on grammar quiz',
    icon: `<svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="#ffd4e8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M6 9H4.5a2.5 2.5 0 0 1 0-5C5.5 4 6 4.5 6 5v4zM18 9h1.5a2.5 2.5 0 0 0 0-5c-1 0-1.5.5-1.5 1.5V9z"></path>
      <path d="M4 22h16"></path>
      <path d="M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22"></path>
      <path d="M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22"></path>
      <path d="M18 2H6v7a6 6 0 0 0 12 0V2z"></path>
    </svg>`,
    date: '2 weeks ago'
  }
];
---

<DashboardLayout title="Dashboard" currentPage="dashboard">
  <SidebarNav slot="sidebar" currentPage="dashboard" />

  <div slot="header">
    <div>
      <h1 class="header-title">Welcome back, John!</h1>
      <p class="header-subtitle">Here's your learning progress overview</p>
    </div>
    <div class="header-actions">
      <button class="notification-btn">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
          <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
        </svg>
        <span class="notification-badge">3</span>
      </button>
      <div class="date-display">
        {new Date().toLocaleDateString('en-GB', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}
      </div>
    </div>
  </div>

  <!-- Quick Stats -->
  <QuickStats />

  <!-- Active Courses Section -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">Active Courses</h2>
      <a href="/portal/courses" class="section-link">
        View All
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </a>
    </div>
    <div class="courses-grid">
      {activeCourses.map((course) => (
        <CourseCard {...course} />
      ))}
    </div>
  </section>

  <!-- Upcoming Classes Section -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">Upcoming Classes</h2>
      <a href="/portal/schedule" class="section-link">
        View Calendar
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </a>
    </div>
    <div class="classes-list">
      {upcomingClasses.map((classItem) => (
        <div class="class-item">
          <div class="class-time">
            <div class="class-date">{classItem.date}</div>
            <div class="class-hour">{classItem.time}</div>
          </div>
          <div class="class-info">
            <h4 class="class-name">{classItem.courseName}</h4>
            <div class="class-details">
              <span class={`class-type ${classItem.type === 'Virtual' ? 'virtual' : 'in-person'}`}>
                {classItem.type}
              </span>
              <span class="class-room">{classItem.room}</span>
            </div>
          </div>
          <div class="class-action">
            {classItem.type === 'Virtual' ? (
              <button class="btn-join">Join Online</button>
            ) : (
              <button class="btn-view">View Details</button>
            )}
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Recent Achievements Section -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">Recent Achievements</h2>
      <a href="/portal/achievements" class="section-link">
        View All
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </a>
    </div>
    <div class="achievements-grid">
      {recentAchievements.map((achievement) => (
        <div class="achievement-card">
          <div class="achievement-icon" set:html={achievement.icon}></div>
          <div class="achievement-content">
            <h4 class="achievement-name">{achievement.name}</h4>
            <p class="achievement-description">{achievement.description}</p>
            <p class="achievement-date">{achievement.date}</p>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- Quick Actions -->
  <section class="section">
    <div class="section-header">
      <h2 class="section-title">Quick Actions</h2>
    </div>
    <div class="quick-actions">
      <button class="action-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14 2 14 8 20 8"></polyline>
          <line x1="16" y1="13" x2="8" y2="13"></line>
          <line x1="16" y1="17" x2="8" y2="17"></line>
          <polyline points="10 9 9 9 8 9"></polyline>
        </svg>
        <span>Submit Assignment</span>
      </button>
      <button class="action-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="16" y1="2" x2="16" y2="6"></line>
          <line x1="8" y1="2" x2="8" y2="6"></line>
          <line x1="3" y1="10" x2="21" y2="10"></line>
        </svg>
        <span>Book Exam</span>
      </button>
      <button class="action-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
          <polyline points="7 10 12 15 17 10"></polyline>
          <line x1="12" y1="15" x2="12" y2="3"></line>
        </svg>
        <span>Download Materials</span>
      </button>
      <button class="action-btn">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
        </svg>
        <span>Message Teacher</span>
      </button>
    </div>
  </section>
</DashboardLayout>

<style>
  /* Header Styles */
  .header-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .header-subtitle {
    font-size: 1rem;
    color: var(--bc-dark-gray);
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 1.5rem;
  }

  .notification-btn {
    position: relative;
    width: 44px;
    height: 44px;
    border-radius: 12px;
    border: 1px solid var(--bc-light-gray);
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--bc-primary-blue);
  }

  .notification-btn:hover {
    background: rgba(35, 7, 90, 0.05);
    border-color: var(--bc-primary-blue);
  }

  .notification-badge {
    position: absolute;
    top: -4px;
    right: -4px;
    width: 20px;
    height: 20px;
    background: var(--bc-pink);
    color: white;
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .date-display {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    padding: 0.5rem 1rem;
    background: rgba(35, 7, 90, 0.05);
    border-radius: 8px;
  }

  /* Section Styles */
  .section {
    margin-bottom: 2.5rem;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-title {
    font-size: 1.375rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
  }

  .section-link {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--bc-light-blue);
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .section-link:hover {
    color: var(--bc-primary-blue);
    transform: translateX(2px);
  }

  /* Courses Grid */
  .courses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  /* Classes List */
  .classes-list {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
  }

  .class-item {
    display: flex;
    align-items: center;
    padding: 1.25rem 1.5rem;
    border-bottom: 1px solid var(--bc-light-gray);
    transition: all 0.2s ease;
  }

  .class-item:last-child {
    border-bottom: none;
  }

  .class-item:hover {
    background: rgba(35, 7, 90, 0.02);
  }

  .class-time {
    width: 120px;
    flex-shrink: 0;
    padding-right: 1.5rem;
  }

  .class-date {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.25rem;
  }

  .class-hour {
    font-size: 0.8125rem;
    color: var(--bc-dark-gray);
  }

  .class-info {
    flex: 1;
  }

  .class-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.5rem;
  }

  .class-details {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .class-type {
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.75rem;
    border-radius: 6px;
  }

  .class-type.virtual {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
  }

  .class-type.in-person {
    background: rgba(59, 130, 246, 0.1);
    color: #3b82f6;
  }

  .class-room {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
  }

  .class-action {
    flex-shrink: 0;
  }

  .btn-join,
  .btn-view {
    padding: 0.625rem 1.25rem;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .btn-join {
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: white;
  }

  .btn-join:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);
  }

  .btn-view {
    background: transparent;
    color: var(--bc-primary-blue);
    border: 1px solid var(--bc-light-gray);
  }

  .btn-view:hover {
    background: rgba(35, 7, 90, 0.05);
    border-color: var(--bc-primary-blue);
  }

  /* Achievements Grid */
  .achievements-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .achievement-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(35, 7, 90, 0.08);
    display: flex;
    align-items: flex-start;
    gap: 1.25rem;
    transition: all 0.3s ease;
  }

  .achievement-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(35, 7, 90, 0.12);
  }

  .achievement-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: #fcfafd;
    border-radius: 12px;
    flex-shrink: 0;
  }

  .achievement-content {
    flex: 1;
    min-width: 0;
  }

  .achievement-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--bc-primary-blue);
    margin-bottom: 0.375rem;
  }

  .achievement-description {
    font-size: 0.875rem;
    color: var(--bc-dark-gray);
    margin-bottom: 0.5rem;
  }

  .achievement-date {
    font-size: 0.75rem;
    color: #94a3b8;
  }

  /* Quick Actions */
  .quick-actions {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .action-btn {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--bc-light-gray);
    border-radius: 12px;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--bc-primary-blue);
  }

  .action-btn:hover {
    background: linear-gradient(135deg, rgba(35, 7, 90, 0.05), rgba(90, 58, 119, 0.05));
    border-color: var(--bc-primary-blue);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.1);
  }

  .action-btn svg {
    width: 28px;
    height: 28px;
  }

  .action-btn span {
    font-size: 0.875rem;
    font-weight: 500;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .header-actions {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .courses-grid {
      grid-template-columns: 1fr;
    }

    .class-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .class-time {
      width: 100%;
      padding-right: 0;
    }

    .achievements-grid {
      grid-template-columns: 1fr;
    }

    .quick-actions {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>