---
const stats = [
  {
    id: 'level',
    title: 'Current Level',
    value: 'B2',
    subtitle: 'Upper Intermediate',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
    </svg>`,
    color: 'blue'
  },
  {
    id: 'hours',
    title: 'Study Hours',
    value: '156',
    subtitle: 'Total hours',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <circle cx="12" cy="12" r="10"></circle>
      <polyline points="12 6 12 12 16 14"></polyline>
    </svg>`,
    color: 'purple'
  },
  {
    id: 'streak',
    title: 'Current Streak',
    value: '21',
    subtitle: 'Days in a row',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
    </svg>`,
    color: 'pink'
  },
  {
    id: 'completed',
    title: 'Courses Completed',
    value: '3',
    subtitle: 'Since joining',
    icon: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
      <polyline points="22 4 12 14.01 9 11.01"></polyline>
    </svg>`,
    color: 'green'
  }
];

const getColorClasses = (color: string) => {
  switch (color) {
    case 'blue':
      return {
        bg: '#e8d9f5',
        border: '#dcc6f0',
        icon: '#b794d4'
      };
    case 'purple':
      return {
        bg: '#dcc6f0',
        border: '#c4a7de',
        icon: '#9b7bbe'
      };
    case 'pink':
      return {
        bg: '#ffd4e8',
        border: '#ffcce0',
        icon: '#ff9ec7'
      };
    case 'green':
      return {
        bg: '#d4f4dd',
        border: '#b8e7c8',
        icon: '#7bc896'
      };
    default:
      return {
        bg: '#f3f4f6',
        border: '#e5e7eb',
        icon: '#6b7280'
      };
  }
};
---

<div class="stats-grid">
  {stats.map((stat) => {
    const colors = getColorClasses(stat.color);
    return (
      <div class="stat-card">
        <div
          class="stat-icon"
          style={`background: ${colors.bg}; border: 1px solid ${colors.border};`}
        >
          <span style={`color: ${colors.icon};`} set:html={stat.icon} />
        </div>
        <div class="stat-content">
          <p class="stat-title">{stat.title}</p>
          <h3 class="stat-value">{stat.value}</h3>
          <p class="stat-subtitle">{stat.subtitle}</p>
        </div>
      </div>
    );
  })}
</div>

<style>
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1.25rem;
    margin-bottom: 1.5rem;
  }

  .stat-card {
    background: var(--bc-white);
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(35, 7, 90, 0.08);
    border: 1px solid var(--bc-border);
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 1rem;
    position: relative;
    overflow: hidden;
  }

  .stat-card::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 100px;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(35, 7, 90, 0.02));
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .stat-card:hover {
    box-shadow: 0 4px 12px rgba(35, 7, 90, 0.12), 0 2px 4px rgba(35, 7, 90, 0.08);
    transform: translateY(-2px);
    border-color: rgba(35, 7, 90, 0.15);
  }

  .stat-card:hover::after {
    opacity: 1;
  }

  .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    position: relative;
    transition: transform 0.2s ease;
  }

  .stat-card:hover .stat-icon {
    transform: scale(1.05);
  }

  .stat-icon::after {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 10px;
    background: linear-gradient(135deg, var(--bc-primary-blue), transparent);
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: -1;
  }

  .stat-card:hover .stat-icon::after {
    opacity: 0.1;
  }

  .stat-content {
    flex: 1;
    min-width: 0;
  }

  .stat-title {
    font-size: 0.75rem;
    color: var(--bc-medium-gray);
    margin-bottom: 0.25rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    font-weight: 500;
  }

  .stat-value {
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--bc-primary-blue), var(--bc-dark-gray));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.2;
    margin-bottom: 0.125rem;
  }

  .stat-subtitle {
    font-size: 0.8125rem;
    color: var(--bc-medium-gray);
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .stat-card {
      padding: 1.25rem;
    }

    .stat-value {
      font-size: 1.5rem;
    }
  }
</style>