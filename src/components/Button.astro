---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  class?: string;
  type?: 'button' | 'submit';
}

const {
  variant = 'primary',
  size = 'md',
  href,
  class: className = '',
  type = 'button'
} = Astro.props;

const sizes = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

const variants = {
  primary: 'text-white shadow-md hover:shadow-lg',
  secondary: 'text-white shadow-md hover:shadow-lg',
  outline: 'bg-transparent text-white border-2 border-white hover:bg-white'
};

const baseClasses = 'inline-flex items-center justify-center font-semibold rounded-full btn-smooth arrow-slide';
const classes = `${baseClasses} ${sizes[size]} ${variants[variant]} ${className}`;

const primaryStyle = 'background: linear-gradient(135deg, var(--bc-primary-blue), #3a1570); box-shadow: 0 4px 20px rgba(35, 7, 90, 0.2);';
const secondaryStyle = 'background: linear-gradient(135deg, var(--bc-cta-pink), #ff69b4); box-shadow: 0 4px 20px rgba(255, 20, 147, 0.3);';

const Tag = href ? 'a' : 'button';
---

{href ? (
  <a href={href} class={classes} style={variant === 'primary' ? primaryStyle : variant === 'secondary' ? secondaryStyle : ''}>
    <slot />
  </a>
) : (
  <button type={type} class={classes} style={variant === 'primary' ? primaryStyle : variant === 'secondary' ? secondaryStyle : ''}>
    <slot />
  </button>
)}